//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 
namespace VTCO.Utils.GoServices
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "ActivityWsSoap", Namespace = "http://tempuri.org/")]
    public partial class ActivityWs : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;

        private System.Threading.SendOrPostCallback CheckAllowAppRequestOperationCompleted;

        private System.Threading.SendOrPostCallback ApproveConsumerOperationCompleted;

        private System.Threading.SendOrPostCallback CheckApproveConsumerOperationCompleted;

        private System.Threading.SendOrPostCallback PublishOperationCompleted;

        private System.Threading.SendOrPostCallback GetPostByIdOperationCompleted;

        private System.Threading.SendOrPostCallback PostGameRequestOperationCompleted;

        private System.Threading.SendOrPostCallback GamePublishOperationCompleted;

        private System.Threading.SendOrPostCallback PublishJsonOperationCompleted;

        private System.Threading.SendOrPostCallback AddCommentOperationCompleted;

        private System.Threading.SendOrPostCallback AddLikeCommentOperationCompleted;

        private System.Threading.SendOrPostCallback AddCommentJsonOperationCompleted;

        private System.Threading.SendOrPostCallback GetCommentOperationCompleted;

        private System.Threading.SendOrPostCallback GetCommentsByListBlogIdOperationCompleted;

        private System.Threading.SendOrPostCallback GetCommentPagingOperationCompleted;

        private System.Threading.SendOrPostCallback GetTopCommentsOperationCompleted;

        private System.Threading.SendOrPostCallback DeleteCommentOperationCompleted;

        private System.Threading.SendOrPostCallback GetLikeListOperationCompleted;

        private System.Threading.SendOrPostCallback GetLikeOperationCompleted;

        private System.Threading.SendOrPostCallback GetFeedOperationCompleted;

        private System.Threading.SendOrPostCallback GetWallOperationCompleted;

        private System.Threading.SendOrPostCallback GetMobileFeedOperationCompleted;

        private System.Threading.SendOrPostCallback GetMobileProfileOperationCompleted;

        private System.Threading.SendOrPostCallback PostStatusOperationCompleted;

        private System.Threading.SendOrPostCallback WriteOnFriendWallOperationCompleted;

        private System.Threading.SendOrPostCallback AddLikeOperationCompleted;

        private System.Threading.SendOrPostCallback AddLikeJsonOperationCompleted;

        private System.Threading.SendOrPostCallback IsLikedOperationCompleted;

        private System.Threading.SendOrPostCallback GetLikeCountOperationCompleted;

        private System.Threading.SendOrPostCallback GetAccountLikeListOperationCompleted;

        private System.Threading.SendOrPostCallback GetAccountLikeListObjectOperationCompleted;

        private System.Threading.SendOrPostCallback DelLikeOperationCompleted;

        private System.Threading.SendOrPostCallback GetBlashOperationCompleted;

        private System.Threading.SendOrPostCallback AddEditPublicNameOperationCompleted;

        private System.Threading.SendOrPostCallback RemoveLogOperationCompleted;

        private System.Threading.SendOrPostCallback RemoveLogAvatarOperationCompleted;

        private System.Threading.SendOrPostCallback RemoveLikeCommentOperationCompleted;

        private System.Threading.SendOrPostCallback AddViolationOperationCompleted;

        private System.Threading.SendOrPostCallback GetFeedByListAccountOperationCompleted;

        private System.Threading.SendOrPostCallback AddApplicationOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateApplicationOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateExInfoApplicationOperationCompleted;

        private System.Threading.SendOrPostCallback DeleteApplicationOperationCompleted;

        private System.Threading.SendOrPostCallback GetApplicationOperationCompleted;

        private System.Threading.SendOrPostCallback SentMessageOperationCompleted;

        private System.Threading.SendOrPostCallback GetStatisticOperationCompleted;

        private System.Threading.SendOrPostCallback GetRecentActivityOperationCompleted;

        private System.Threading.SendOrPostCallback GetCommentDetailOperationCompleted;

        /// <remarks/>
        public ActivityWs()
        {
            this.Url = VTCO.Config.Global.Settings.WSActivity;
        }

        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;

        /// <remarks/>
        public event CheckAllowAppRequestCompletedEventHandler CheckAllowAppRequestCompleted;

        /// <remarks/>
        public event ApproveConsumerCompletedEventHandler ApproveConsumerCompleted;

        /// <remarks/>
        public event CheckApproveConsumerCompletedEventHandler CheckApproveConsumerCompleted;

        /// <remarks/>
        public event PublishCompletedEventHandler PublishCompleted;

        /// <remarks/>
        public event GetPostByIdCompletedEventHandler GetPostByIdCompleted;

        /// <remarks/>
        public event PostGameRequestCompletedEventHandler PostGameRequestCompleted;

        /// <remarks/>
        public event GamePublishCompletedEventHandler GamePublishCompleted;

        /// <remarks/>
        public event PublishJsonCompletedEventHandler PublishJsonCompleted;

        /// <remarks/>
        public event AddCommentCompletedEventHandler AddCommentCompleted;

        /// <remarks/>
        public event AddLikeCommentCompletedEventHandler AddLikeCommentCompleted;

        /// <remarks/>
        public event AddCommentJsonCompletedEventHandler AddCommentJsonCompleted;

        /// <remarks/>
        public event GetCommentCompletedEventHandler GetCommentCompleted;

        /// <remarks/>
        public event GetCommentsByListBlogIdCompletedEventHandler GetCommentsByListBlogIdCompleted;

        /// <remarks/>
        public event GetCommentPagingCompletedEventHandler GetCommentPagingCompleted;

        /// <remarks/>
        public event GetTopCommentsCompletedEventHandler GetTopCommentsCompleted;

        /// <remarks/>
        public event DeleteCommentCompletedEventHandler DeleteCommentCompleted;

        /// <remarks/>
        public event GetLikeListCompletedEventHandler GetLikeListCompleted;

        /// <remarks/>
        public event GetLikeCompletedEventHandler GetLikeCompleted;

        /// <remarks/>
        public event GetFeedCompletedEventHandler GetFeedCompleted;

        /// <remarks/>
        public event GetWallCompletedEventHandler GetWallCompleted;

        /// <remarks/>
        public event GetMobileFeedCompletedEventHandler GetMobileFeedCompleted;

        /// <remarks/>
        public event GetMobileProfileCompletedEventHandler GetMobileProfileCompleted;

        /// <remarks/>
        public event PostStatusCompletedEventHandler PostStatusCompleted;

        /// <remarks/>
        public event WriteOnFriendWallCompletedEventHandler WriteOnFriendWallCompleted;

        /// <remarks/>
        public event AddLikeCompletedEventHandler AddLikeCompleted;

        /// <remarks/>
        public event AddLikeJsonCompletedEventHandler AddLikeJsonCompleted;

        /// <remarks/>
        public event IsLikedCompletedEventHandler IsLikedCompleted;

        /// <remarks/>
        public event GetLikeCountCompletedEventHandler GetLikeCountCompleted;

        /// <remarks/>
        public event GetAccountLikeListCompletedEventHandler GetAccountLikeListCompleted;

        /// <remarks/>
        public event GetAccountLikeListObjectCompletedEventHandler GetAccountLikeListObjectCompleted;

        /// <remarks/>
        public event DelLikeCompletedEventHandler DelLikeCompleted;

        /// <remarks/>
        public event GetBlashCompletedEventHandler GetBlashCompleted;

        /// <remarks/>
        public event AddEditPublicNameCompletedEventHandler AddEditPublicNameCompleted;

        /// <remarks/>
        public event RemoveLogCompletedEventHandler RemoveLogCompleted;

        /// <remarks/>
        public event RemoveLogAvatarCompletedEventHandler RemoveLogAvatarCompleted;

        /// <remarks/>
        public event RemoveLikeCommentCompletedEventHandler RemoveLikeCommentCompleted;

        /// <remarks/>
        public event AddViolationCompletedEventHandler AddViolationCompleted;

        /// <remarks/>
        public event GetFeedByListAccountCompletedEventHandler GetFeedByListAccountCompleted;

        /// <remarks/>
        public event AddApplicationCompletedEventHandler AddApplicationCompleted;

        /// <remarks/>
        public event UpdateApplicationCompletedEventHandler UpdateApplicationCompleted;

        /// <remarks/>
        public event UpdateExInfoApplicationCompletedEventHandler UpdateExInfoApplicationCompleted;

        /// <remarks/>
        public event DeleteApplicationCompletedEventHandler DeleteApplicationCompleted;

        /// <remarks/>
        public event GetApplicationCompletedEventHandler GetApplicationCompleted;

        /// <remarks/>
        public event SentMessageCompletedEventHandler SentMessageCompleted;

        /// <remarks/>
        public event GetStatisticCompletedEventHandler GetStatisticCompleted;

        /// <remarks/>
        public event GetRecentActivityCompletedEventHandler GetRecentActivityCompleted;

        /// <remarks/>
        public event GetCommentDetailCompletedEventHandler GetCommentDetailCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld()
        {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("HelloWorld", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndHelloWorld(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void HelloWorldAsync()
        {
            this.HelloWorldAsync(null);
        }

        /// <remarks/>
        public void HelloWorldAsync(object userState)
        {
            if ((this.HelloWorldOperationCompleted == null))
            {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }

        private void OnHelloWorldOperationCompleted(object arg)
        {
            if ((this.HelloWorldCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckAllowAppRequest", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckAllowAppRequest(long accountId, long appId)
        {
            object[] results = this.Invoke("CheckAllowAppRequest", new object[] {
                    accountId,
                    appId});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCheckAllowAppRequest(long accountId, long appId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CheckAllowAppRequest", new object[] {
                    accountId,
                    appId}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndCheckAllowAppRequest(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void CheckAllowAppRequestAsync(long accountId, long appId)
        {
            this.CheckAllowAppRequestAsync(accountId, appId, null);
        }

        /// <remarks/>
        public void CheckAllowAppRequestAsync(long accountId, long appId, object userState)
        {
            if ((this.CheckAllowAppRequestOperationCompleted == null))
            {
                this.CheckAllowAppRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAllowAppRequestOperationCompleted);
            }
            this.InvokeAsync("CheckAllowAppRequest", new object[] {
                    accountId,
                    appId}, this.CheckAllowAppRequestOperationCompleted, userState);
        }

        private void OnCheckAllowAppRequestOperationCompleted(object arg)
        {
            if ((this.CheckAllowAppRequestCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAllowAppRequestCompleted(this, new CheckAllowAppRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ApproveConsumer", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ApproveConsumer(long accountId, PublicConsumer consumer)
        {
            object[] results = this.Invoke("ApproveConsumer", new object[] {
                    accountId,
                    consumer});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginApproveConsumer(long accountId, PublicConsumer consumer, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ApproveConsumer", new object[] {
                    accountId,
                    consumer}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndApproveConsumer(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void ApproveConsumerAsync(long accountId, PublicConsumer consumer)
        {
            this.ApproveConsumerAsync(accountId, consumer, null);
        }

        /// <remarks/>
        public void ApproveConsumerAsync(long accountId, PublicConsumer consumer, object userState)
        {
            if ((this.ApproveConsumerOperationCompleted == null))
            {
                this.ApproveConsumerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveConsumerOperationCompleted);
            }
            this.InvokeAsync("ApproveConsumer", new object[] {
                    accountId,
                    consumer}, this.ApproveConsumerOperationCompleted, userState);
        }

        private void OnApproveConsumerOperationCompleted(object arg)
        {
            if ((this.ApproveConsumerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveConsumerCompleted(this, new ApproveConsumerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckApproveConsumer", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckApproveConsumer(long accountId, long consumerId)
        {
            object[] results = this.Invoke("CheckApproveConsumer", new object[] {
                    accountId,
                    consumerId});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCheckApproveConsumer(long accountId, long consumerId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CheckApproveConsumer", new object[] {
                    accountId,
                    consumerId}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndCheckApproveConsumer(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void CheckApproveConsumerAsync(long accountId, long consumerId)
        {
            this.CheckApproveConsumerAsync(accountId, consumerId, null);
        }

        /// <remarks/>
        public void CheckApproveConsumerAsync(long accountId, long consumerId, object userState)
        {
            if ((this.CheckApproveConsumerOperationCompleted == null))
            {
                this.CheckApproveConsumerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckApproveConsumerOperationCompleted);
            }
            this.InvokeAsync("CheckApproveConsumer", new object[] {
                    accountId,
                    consumerId}, this.CheckApproveConsumerOperationCompleted, userState);
        }

        private void OnCheckApproveConsumerOperationCompleted(object arg)
        {
            if ((this.CheckApproveConsumerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckApproveConsumerCompleted(this, new CheckApproveConsumerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Publish", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Publish(string applicationKey, AccountAction log)
        {
            object[] results = this.Invoke("Publish", new object[] {
                    applicationKey,
                    log});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginPublish(string applicationKey, AccountAction log, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Publish", new object[] {
                    applicationKey,
                    log}, callback, asyncState);
        }

        /// <remarks/>
        public int EndPublish(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void PublishAsync(string applicationKey, AccountAction log)
        {
            this.PublishAsync(applicationKey, log, null);
        }

        /// <remarks/>
        public void PublishAsync(string applicationKey, AccountAction log, object userState)
        {
            if ((this.PublishOperationCompleted == null))
            {
                this.PublishOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPublishOperationCompleted);
            }
            this.InvokeAsync("Publish", new object[] {
                    applicationKey,
                    log}, this.PublishOperationCompleted, userState);
        }

        private void OnPublishOperationCompleted(object arg)
        {
            if ((this.PublishCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PublishCompleted(this, new PublishCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPostById", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPostById(string applicationKey, long accountId, long postId)
        {
            object[] results = this.Invoke("GetPostById", new object[] {
                    applicationKey,
                    accountId,
                    postId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetPostById(string applicationKey, long accountId, long postId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetPostById", new object[] {
                    applicationKey,
                    accountId,
                    postId}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetPostById(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetPostByIdAsync(string applicationKey, long accountId, long postId)
        {
            this.GetPostByIdAsync(applicationKey, accountId, postId, null);
        }

        /// <remarks/>
        public void GetPostByIdAsync(string applicationKey, long accountId, long postId, object userState)
        {
            if ((this.GetPostByIdOperationCompleted == null))
            {
                this.GetPostByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostByIdOperationCompleted);
            }
            this.InvokeAsync("GetPostById", new object[] {
                    applicationKey,
                    accountId,
                    postId}, this.GetPostByIdOperationCompleted, userState);
        }

        private void OnGetPostByIdOperationCompleted(object arg)
        {
            if ((this.GetPostByIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostByIdCompleted(this, new GetPostByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostGameRequest", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PostGameRequest(GameRequest gameRequest)
        {
            object[] results = this.Invoke("PostGameRequest", new object[] {
                    gameRequest});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginPostGameRequest(GameRequest gameRequest, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("PostGameRequest", new object[] {
                    gameRequest}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndPostGameRequest(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void PostGameRequestAsync(GameRequest gameRequest)
        {
            this.PostGameRequestAsync(gameRequest, null);
        }

        /// <remarks/>
        public void PostGameRequestAsync(GameRequest gameRequest, object userState)
        {
            if ((this.PostGameRequestOperationCompleted == null))
            {
                this.PostGameRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostGameRequestOperationCompleted);
            }
            this.InvokeAsync("PostGameRequest", new object[] {
                    gameRequest}, this.PostGameRequestOperationCompleted, userState);
        }

        private void OnPostGameRequestOperationCompleted(object arg)
        {
            if ((this.PostGameRequestCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostGameRequestCompleted(this, new PostGameRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GamePublish", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GamePublish(string applicationKey, AccountGameAction log)
        {
            object[] results = this.Invoke("GamePublish", new object[] {
                    applicationKey,
                    log});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGamePublish(string applicationKey, AccountGameAction log, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GamePublish", new object[] {
                    applicationKey,
                    log}, callback, asyncState);
        }

        /// <remarks/>
        public int EndGamePublish(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void GamePublishAsync(string applicationKey, AccountGameAction log)
        {
            this.GamePublishAsync(applicationKey, log, null);
        }

        /// <remarks/>
        public void GamePublishAsync(string applicationKey, AccountGameAction log, object userState)
        {
            if ((this.GamePublishOperationCompleted == null))
            {
                this.GamePublishOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGamePublishOperationCompleted);
            }
            this.InvokeAsync("GamePublish", new object[] {
                    applicationKey,
                    log}, this.GamePublishOperationCompleted, userState);
        }

        private void OnGamePublishOperationCompleted(object arg)
        {
            if ((this.GamePublishCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GamePublishCompleted(this, new GamePublishCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PublishJson", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int PublishJson(string applicationKey, string jsonLog)
        {
            object[] results = this.Invoke("PublishJson", new object[] {
                    applicationKey,
                    jsonLog});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginPublishJson(string applicationKey, string jsonLog, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("PublishJson", new object[] {
                    applicationKey,
                    jsonLog}, callback, asyncState);
        }

        /// <remarks/>
        public int EndPublishJson(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void PublishJsonAsync(string applicationKey, string jsonLog)
        {
            this.PublishJsonAsync(applicationKey, jsonLog, null);
        }

        /// <remarks/>
        public void PublishJsonAsync(string applicationKey, string jsonLog, object userState)
        {
            if ((this.PublishJsonOperationCompleted == null))
            {
                this.PublishJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPublishJsonOperationCompleted);
            }
            this.InvokeAsync("PublishJson", new object[] {
                    applicationKey,
                    jsonLog}, this.PublishJsonOperationCompleted, userState);
        }

        private void OnPublishJsonOperationCompleted(object arg)
        {
            if ((this.PublishJsonCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PublishJsonCompleted(this, new PublishJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddComment", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddComment(string applicationKey, EComment cmt)
        {
            object[] results = this.Invoke("AddComment", new object[] {
                    applicationKey,
                    cmt});
            return ((long)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddComment(string applicationKey, EComment cmt, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddComment", new object[] {
                    applicationKey,
                    cmt}, callback, asyncState);
        }

        /// <remarks/>
        public long EndAddComment(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((long)(results[0]));
        }

        /// <remarks/>
        public void AddCommentAsync(string applicationKey, EComment cmt)
        {
            this.AddCommentAsync(applicationKey, cmt, null);
        }

        /// <remarks/>
        public void AddCommentAsync(string applicationKey, EComment cmt, object userState)
        {
            if ((this.AddCommentOperationCompleted == null))
            {
                this.AddCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCommentOperationCompleted);
            }
            this.InvokeAsync("AddComment", new object[] {
                    applicationKey,
                    cmt}, this.AddCommentOperationCompleted, userState);
        }

        private void OnAddCommentOperationCompleted(object arg)
        {
            if ((this.AddCommentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCommentCompleted(this, new AddCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddLikeComment", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddLikeComment(string applicationKey, ELikeComment likeComment)
        {
            object[] results = this.Invoke("AddLikeComment", new object[] {
                    applicationKey,
                    likeComment});
            return ((long)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddLikeComment(string applicationKey, ELikeComment likeComment, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddLikeComment", new object[] {
                    applicationKey,
                    likeComment}, callback, asyncState);
        }

        /// <remarks/>
        public long EndAddLikeComment(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((long)(results[0]));
        }

        /// <remarks/>
        public void AddLikeCommentAsync(string applicationKey, ELikeComment likeComment)
        {
            this.AddLikeCommentAsync(applicationKey, likeComment, null);
        }

        /// <remarks/>
        public void AddLikeCommentAsync(string applicationKey, ELikeComment likeComment, object userState)
        {
            if ((this.AddLikeCommentOperationCompleted == null))
            {
                this.AddLikeCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLikeCommentOperationCompleted);
            }
            this.InvokeAsync("AddLikeComment", new object[] {
                    applicationKey,
                    likeComment}, this.AddLikeCommentOperationCompleted, userState);
        }

        private void OnAddLikeCommentOperationCompleted(object arg)
        {
            if ((this.AddLikeCommentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLikeCommentCompleted(this, new AddLikeCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddCommentJson", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddCommentJson(string applicationKey, string json)
        {
            object[] results = this.Invoke("AddCommentJson", new object[] {
                    applicationKey,
                    json});
            return ((long)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddCommentJson(string applicationKey, string json, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddCommentJson", new object[] {
                    applicationKey,
                    json}, callback, asyncState);
        }

        /// <remarks/>
        public long EndAddCommentJson(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((long)(results[0]));
        }

        /// <remarks/>
        public void AddCommentJsonAsync(string applicationKey, string json)
        {
            this.AddCommentJsonAsync(applicationKey, json, null);
        }

        /// <remarks/>
        public void AddCommentJsonAsync(string applicationKey, string json, object userState)
        {
            if ((this.AddCommentJsonOperationCompleted == null))
            {
                this.AddCommentJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCommentJsonOperationCompleted);
            }
            this.InvokeAsync("AddCommentJson", new object[] {
                    applicationKey,
                    json}, this.AddCommentJsonOperationCompleted, userState);
        }

        private void OnAddCommentJsonOperationCompleted(object arg)
        {
            if ((this.AddCommentJsonCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCommentJsonCompleted(this, new AddCommentJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetComment", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetComment(string applicationKey, long whereId, int logType, int sourceId)
        {
            object[] results = this.Invoke("GetComment", new object[] {
                    applicationKey,
                    whereId,
                    logType,
                    sourceId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetComment(string applicationKey, long whereId, int logType, int sourceId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetComment", new object[] {
                    applicationKey,
                    whereId,
                    logType,
                    sourceId}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetComment(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetCommentAsync(string applicationKey, long whereId, int logType, int sourceId)
        {
            this.GetCommentAsync(applicationKey, whereId, logType, sourceId, null);
        }

        /// <remarks/>
        public void GetCommentAsync(string applicationKey, long whereId, int logType, int sourceId, object userState)
        {
            if ((this.GetCommentOperationCompleted == null))
            {
                this.GetCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentOperationCompleted);
            }
            this.InvokeAsync("GetComment", new object[] {
                    applicationKey,
                    whereId,
                    logType,
                    sourceId}, this.GetCommentOperationCompleted, userState);
        }

        private void OnGetCommentOperationCompleted(object arg)
        {
            if ((this.GetCommentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentCompleted(this, new GetCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCommentsByListBlogId", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCommentsByListBlogId(string applicationKey, long[] lstOwnerId, int top, bool isGetLastest)
        {
            object[] results = this.Invoke("GetCommentsByListBlogId", new object[] {
                    applicationKey,
                    lstOwnerId,
                    top,
                    isGetLastest});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCommentsByListBlogId(string applicationKey, long[] lstOwnerId, int top, bool isGetLastest, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCommentsByListBlogId", new object[] {
                    applicationKey,
                    lstOwnerId,
                    top,
                    isGetLastest}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetCommentsByListBlogId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetCommentsByListBlogIdAsync(string applicationKey, long[] lstOwnerId, int top, bool isGetLastest)
        {
            this.GetCommentsByListBlogIdAsync(applicationKey, lstOwnerId, top, isGetLastest, null);
        }

        /// <remarks/>
        public void GetCommentsByListBlogIdAsync(string applicationKey, long[] lstOwnerId, int top, bool isGetLastest, object userState)
        {
            if ((this.GetCommentsByListBlogIdOperationCompleted == null))
            {
                this.GetCommentsByListBlogIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentsByListBlogIdOperationCompleted);
            }
            this.InvokeAsync("GetCommentsByListBlogId", new object[] {
                    applicationKey,
                    lstOwnerId,
                    top,
                    isGetLastest}, this.GetCommentsByListBlogIdOperationCompleted, userState);
        }

        private void OnGetCommentsByListBlogIdOperationCompleted(object arg)
        {
            if ((this.GetCommentsByListBlogIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentsByListBlogIdCompleted(this, new GetCommentsByListBlogIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCommentPaging", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCommentPaging(string applicationKey, long whereId, int logType, int sourceId, int pageIndex, int pageSize)
        {
            object[] results = this.Invoke("GetCommentPaging", new object[] {
                    applicationKey,
                    whereId,
                    logType,
                    sourceId,
                    pageIndex,
                    pageSize});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCommentPaging(string applicationKey, long whereId, int logType, int sourceId, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCommentPaging", new object[] {
                    applicationKey,
                    whereId,
                    logType,
                    sourceId,
                    pageIndex,
                    pageSize}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetCommentPaging(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetCommentPagingAsync(string applicationKey, long whereId, int logType, int sourceId, int pageIndex, int pageSize)
        {
            this.GetCommentPagingAsync(applicationKey, whereId, logType, sourceId, pageIndex, pageSize, null);
        }

        /// <remarks/>
        public void GetCommentPagingAsync(string applicationKey, long whereId, int logType, int sourceId, int pageIndex, int pageSize, object userState)
        {
            if ((this.GetCommentPagingOperationCompleted == null))
            {
                this.GetCommentPagingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentPagingOperationCompleted);
            }
            this.InvokeAsync("GetCommentPaging", new object[] {
                    applicationKey,
                    whereId,
                    logType,
                    sourceId,
                    pageIndex,
                    pageSize}, this.GetCommentPagingOperationCompleted, userState);
        }

        private void OnGetCommentPagingOperationCompleted(object arg)
        {
            if ((this.GetCommentPagingCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentPagingCompleted(this, new GetCommentPagingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTopComments", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTopComments(string applicationKey, int sourceId, int rowCount)
        {
            object[] results = this.Invoke("GetTopComments", new object[] {
                    applicationKey,
                    sourceId,
                    rowCount});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetTopComments(string applicationKey, int sourceId, int rowCount, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetTopComments", new object[] {
                    applicationKey,
                    sourceId,
                    rowCount}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetTopComments(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetTopCommentsAsync(string applicationKey, int sourceId, int rowCount)
        {
            this.GetTopCommentsAsync(applicationKey, sourceId, rowCount, null);
        }

        /// <remarks/>
        public void GetTopCommentsAsync(string applicationKey, int sourceId, int rowCount, object userState)
        {
            if ((this.GetTopCommentsOperationCompleted == null))
            {
                this.GetTopCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTopCommentsOperationCompleted);
            }
            this.InvokeAsync("GetTopComments", new object[] {
                    applicationKey,
                    sourceId,
                    rowCount}, this.GetTopCommentsOperationCompleted, userState);
        }

        private void OnGetTopCommentsOperationCompleted(object arg)
        {
            if ((this.GetTopCommentsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTopCommentsCompleted(this, new GetTopCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteComment", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteComment(string applicationKey, long accountId, long whereId, long commentId, int logType)
        {
            object[] results = this.Invoke("DeleteComment", new object[] {
                    applicationKey,
                    accountId,
                    whereId,
                    commentId,
                    logType});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDeleteComment(string applicationKey, long accountId, long whereId, long commentId, int logType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DeleteComment", new object[] {
                    applicationKey,
                    accountId,
                    whereId,
                    commentId,
                    logType}, callback, asyncState);
        }

        /// <remarks/>
        public int EndDeleteComment(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void DeleteCommentAsync(string applicationKey, long accountId, long whereId, long commentId, int logType)
        {
            this.DeleteCommentAsync(applicationKey, accountId, whereId, commentId, logType, null);
        }

        /// <remarks/>
        public void DeleteCommentAsync(string applicationKey, long accountId, long whereId, long commentId, int logType, object userState)
        {
            if ((this.DeleteCommentOperationCompleted == null))
            {
                this.DeleteCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCommentOperationCompleted);
            }
            this.InvokeAsync("DeleteComment", new object[] {
                    applicationKey,
                    accountId,
                    whereId,
                    commentId,
                    logType}, this.DeleteCommentOperationCompleted, userState);
        }

        private void OnDeleteCommentOperationCompleted(object arg)
        {
            if ((this.DeleteCommentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCommentCompleted(this, new DeleteCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLikeList", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLikeList(string applicationKey, long whereId, int logType, int sourceType)
        {
            object[] results = this.Invoke("GetLikeList", new object[] {
                    applicationKey,
                    whereId,
                    logType,
                    sourceType});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetLikeList(string applicationKey, long whereId, int logType, int sourceType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetLikeList", new object[] {
                    applicationKey,
                    whereId,
                    logType,
                    sourceType}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetLikeList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetLikeListAsync(string applicationKey, long whereId, int logType, int sourceType)
        {
            this.GetLikeListAsync(applicationKey, whereId, logType, sourceType, null);
        }

        /// <remarks/>
        public void GetLikeListAsync(string applicationKey, long whereId, int logType, int sourceType, object userState)
        {
            if ((this.GetLikeListOperationCompleted == null))
            {
                this.GetLikeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLikeListOperationCompleted);
            }
            this.InvokeAsync("GetLikeList", new object[] {
                    applicationKey,
                    whereId,
                    logType,
                    sourceType}, this.GetLikeListOperationCompleted, userState);
        }

        private void OnGetLikeListOperationCompleted(object arg)
        {
            if ((this.GetLikeListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLikeListCompleted(this, new GetLikeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLike", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LikeObject[] GetLike(string applicationKey, long whereId, int logType)
        {
            object[] results = this.Invoke("GetLike", new object[] {
                    applicationKey,
                    whereId,
                    logType});
            return ((LikeObject[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetLike(string applicationKey, long whereId, int logType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetLike", new object[] {
                    applicationKey,
                    whereId,
                    logType}, callback, asyncState);
        }

        /// <remarks/>
        public LikeObject[] EndGetLike(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((LikeObject[])(results[0]));
        }

        /// <remarks/>
        public void GetLikeAsync(string applicationKey, long whereId, int logType)
        {
            this.GetLikeAsync(applicationKey, whereId, logType, null);
        }

        /// <remarks/>
        public void GetLikeAsync(string applicationKey, long whereId, int logType, object userState)
        {
            if ((this.GetLikeOperationCompleted == null))
            {
                this.GetLikeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLikeOperationCompleted);
            }
            this.InvokeAsync("GetLike", new object[] {
                    applicationKey,
                    whereId,
                    logType}, this.GetLikeOperationCompleted, userState);
        }

        private void OnGetLikeOperationCompleted(object arg)
        {
            if ((this.GetLikeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLikeCompleted(this, new GetLikeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFeed", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFeed(string applicationKey, long accountId, int sourceId, int pageIndex, int pageSize, int totalRows)
        {
            object[] results = this.Invoke("GetFeed", new object[] {
                    applicationKey,
                    accountId,
                    sourceId,
                    pageIndex,
                    pageSize,
                    totalRows});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetFeed(string applicationKey, long accountId, int sourceId, int pageIndex, int pageSize, int totalRows, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetFeed", new object[] {
                    applicationKey,
                    accountId,
                    sourceId,
                    pageIndex,
                    pageSize,
                    totalRows}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetFeed(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetFeedAsync(string applicationKey, long accountId, int sourceId, int pageIndex, int pageSize, int totalRows)
        {
            this.GetFeedAsync(applicationKey, accountId, sourceId, pageIndex, pageSize, totalRows, null);
        }

        /// <remarks/>
        public void GetFeedAsync(string applicationKey, long accountId, int sourceId, int pageIndex, int pageSize, int totalRows, object userState)
        {
            if ((this.GetFeedOperationCompleted == null))
            {
                this.GetFeedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeedOperationCompleted);
            }
            this.InvokeAsync("GetFeed", new object[] {
                    applicationKey,
                    accountId,
                    sourceId,
                    pageIndex,
                    pageSize,
                    totalRows}, this.GetFeedOperationCompleted, userState);
        }

        private void OnGetFeedOperationCompleted(object arg)
        {
            if ((this.GetFeedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeedCompleted(this, new GetFeedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWall", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWall(string applicationKey, long accountId, int sourceId, int pageIndex, int pageSize, int totalRows)
        {
            object[] results = this.Invoke("GetWall", new object[] {
                    applicationKey,
                    accountId,
                    sourceId,
                    pageIndex,
                    pageSize,
                    totalRows});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetWall(string applicationKey, long accountId, int sourceId, int pageIndex, int pageSize, int totalRows, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetWall", new object[] {
                    applicationKey,
                    accountId,
                    sourceId,
                    pageIndex,
                    pageSize,
                    totalRows}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetWall(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetWallAsync(string applicationKey, long accountId, int sourceId, int pageIndex, int pageSize, int totalRows)
        {
            this.GetWallAsync(applicationKey, accountId, sourceId, pageIndex, pageSize, totalRows, null);
        }

        /// <remarks/>
        public void GetWallAsync(string applicationKey, long accountId, int sourceId, int pageIndex, int pageSize, int totalRows, object userState)
        {
            if ((this.GetWallOperationCompleted == null))
            {
                this.GetWallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWallOperationCompleted);
            }
            this.InvokeAsync("GetWall", new object[] {
                    applicationKey,
                    accountId,
                    sourceId,
                    pageIndex,
                    pageSize,
                    totalRows}, this.GetWallOperationCompleted, userState);
        }

        private void OnGetWallOperationCompleted(object arg)
        {
            if ((this.GetWallCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWallCompleted(this, new GetWallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMobileFeed", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMobileFeed(string applicationKey, long accountId, int pageIndex, int pageSize, int totalRows)
        {
            object[] results = this.Invoke("GetMobileFeed", new object[] {
                    applicationKey,
                    accountId,
                    pageIndex,
                    pageSize,
                    totalRows});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetMobileFeed(string applicationKey, long accountId, int pageIndex, int pageSize, int totalRows, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetMobileFeed", new object[] {
                    applicationKey,
                    accountId,
                    pageIndex,
                    pageSize,
                    totalRows}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetMobileFeed(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetMobileFeedAsync(string applicationKey, long accountId, int pageIndex, int pageSize, int totalRows)
        {
            this.GetMobileFeedAsync(applicationKey, accountId, pageIndex, pageSize, totalRows, null);
        }

        /// <remarks/>
        public void GetMobileFeedAsync(string applicationKey, long accountId, int pageIndex, int pageSize, int totalRows, object userState)
        {
            if ((this.GetMobileFeedOperationCompleted == null))
            {
                this.GetMobileFeedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMobileFeedOperationCompleted);
            }
            this.InvokeAsync("GetMobileFeed", new object[] {
                    applicationKey,
                    accountId,
                    pageIndex,
                    pageSize,
                    totalRows}, this.GetMobileFeedOperationCompleted, userState);
        }

        private void OnGetMobileFeedOperationCompleted(object arg)
        {
            if ((this.GetMobileFeedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMobileFeedCompleted(this, new GetMobileFeedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMobileProfile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMobileProfile(string applicationKey, long accountId, int pageIndex, int pageSize, int totalRows)
        {
            object[] results = this.Invoke("GetMobileProfile", new object[] {
                    applicationKey,
                    accountId,
                    pageIndex,
                    pageSize,
                    totalRows});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetMobileProfile(string applicationKey, long accountId, int pageIndex, int pageSize, int totalRows, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetMobileProfile", new object[] {
                    applicationKey,
                    accountId,
                    pageIndex,
                    pageSize,
                    totalRows}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetMobileProfile(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetMobileProfileAsync(string applicationKey, long accountId, int pageIndex, int pageSize, int totalRows)
        {
            this.GetMobileProfileAsync(applicationKey, accountId, pageIndex, pageSize, totalRows, null);
        }

        /// <remarks/>
        public void GetMobileProfileAsync(string applicationKey, long accountId, int pageIndex, int pageSize, int totalRows, object userState)
        {
            if ((this.GetMobileProfileOperationCompleted == null))
            {
                this.GetMobileProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMobileProfileOperationCompleted);
            }
            this.InvokeAsync("GetMobileProfile", new object[] {
                    applicationKey,
                    accountId,
                    pageIndex,
                    pageSize,
                    totalRows}, this.GetMobileProfileOperationCompleted, userState);
        }

        private void OnGetMobileProfileOperationCompleted(object arg)
        {
            if ((this.GetMobileProfileCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMobileProfileCompleted(this, new GetMobileProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PostStatus", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PostStatus(string applicationKey, long accountId, string message, int sourceId)
        {
            object[] results = this.Invoke("PostStatus", new object[] {
                    applicationKey,
                    accountId,
                    message,
                    sourceId});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginPostStatus(string applicationKey, long accountId, string message, int sourceId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("PostStatus", new object[] {
                    applicationKey,
                    accountId,
                    message,
                    sourceId}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndPostStatus(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void PostStatusAsync(string applicationKey, long accountId, string message, int sourceId)
        {
            this.PostStatusAsync(applicationKey, accountId, message, sourceId, null);
        }

        /// <remarks/>
        public void PostStatusAsync(string applicationKey, long accountId, string message, int sourceId, object userState)
        {
            if ((this.PostStatusOperationCompleted == null))
            {
                this.PostStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostStatusOperationCompleted);
            }
            this.InvokeAsync("PostStatus", new object[] {
                    applicationKey,
                    accountId,
                    message,
                    sourceId}, this.PostStatusOperationCompleted, userState);
        }

        private void OnPostStatusOperationCompleted(object arg)
        {
            if ((this.PostStatusCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostStatusCompleted(this, new PostStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WriteOnFriendWall", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WriteOnFriendWall(string applicationKey, long sourceAccountId, long destAccountId, string message, int sourceId)
        {
            object[] results = this.Invoke("WriteOnFriendWall", new object[] {
                    applicationKey,
                    sourceAccountId,
                    destAccountId,
                    message,
                    sourceId});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginWriteOnFriendWall(string applicationKey, long sourceAccountId, long destAccountId, string message, int sourceId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("WriteOnFriendWall", new object[] {
                    applicationKey,
                    sourceAccountId,
                    destAccountId,
                    message,
                    sourceId}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndWriteOnFriendWall(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void WriteOnFriendWallAsync(string applicationKey, long sourceAccountId, long destAccountId, string message, int sourceId)
        {
            this.WriteOnFriendWallAsync(applicationKey, sourceAccountId, destAccountId, message, sourceId, null);
        }

        /// <remarks/>
        public void WriteOnFriendWallAsync(string applicationKey, long sourceAccountId, long destAccountId, string message, int sourceId, object userState)
        {
            if ((this.WriteOnFriendWallOperationCompleted == null))
            {
                this.WriteOnFriendWallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteOnFriendWallOperationCompleted);
            }
            this.InvokeAsync("WriteOnFriendWall", new object[] {
                    applicationKey,
                    sourceAccountId,
                    destAccountId,
                    message,
                    sourceId}, this.WriteOnFriendWallOperationCompleted, userState);
        }

        private void OnWriteOnFriendWallOperationCompleted(object arg)
        {
            if ((this.WriteOnFriendWallCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteOnFriendWallCompleted(this, new WriteOnFriendWallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddLike", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddLike(string applicationKey, ELike eLike)
        {
            object[] results = this.Invoke("AddLike", new object[] {
                    applicationKey,
                    eLike});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddLike(string applicationKey, ELike eLike, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddLike", new object[] {
                    applicationKey,
                    eLike}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddLike(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddLikeAsync(string applicationKey, ELike eLike)
        {
            this.AddLikeAsync(applicationKey, eLike, null);
        }

        /// <remarks/>
        public void AddLikeAsync(string applicationKey, ELike eLike, object userState)
        {
            if ((this.AddLikeOperationCompleted == null))
            {
                this.AddLikeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLikeOperationCompleted);
            }
            this.InvokeAsync("AddLike", new object[] {
                    applicationKey,
                    eLike}, this.AddLikeOperationCompleted, userState);
        }

        private void OnAddLikeOperationCompleted(object arg)
        {
            if ((this.AddLikeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLikeCompleted(this, new AddLikeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddLikeJson", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddLikeJson(string applicationKey, string jsonLike)
        {
            object[] results = this.Invoke("AddLikeJson", new object[] {
                    applicationKey,
                    jsonLike});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddLikeJson(string applicationKey, string jsonLike, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddLikeJson", new object[] {
                    applicationKey,
                    jsonLike}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddLikeJson(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddLikeJsonAsync(string applicationKey, string jsonLike)
        {
            this.AddLikeJsonAsync(applicationKey, jsonLike, null);
        }

        /// <remarks/>
        public void AddLikeJsonAsync(string applicationKey, string jsonLike, object userState)
        {
            if ((this.AddLikeJsonOperationCompleted == null))
            {
                this.AddLikeJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLikeJsonOperationCompleted);
            }
            this.InvokeAsync("AddLikeJson", new object[] {
                    applicationKey,
                    jsonLike}, this.AddLikeJsonOperationCompleted, userState);
        }

        private void OnAddLikeJsonOperationCompleted(object arg)
        {
            if ((this.AddLikeJsonCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLikeJsonCompleted(this, new AddLikeJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsLiked", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsLiked(string applicationKey, long accountId, long whereId, int logType)
        {
            object[] results = this.Invoke("IsLiked", new object[] {
                    applicationKey,
                    accountId,
                    whereId,
                    logType});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIsLiked(string applicationKey, long accountId, long whereId, int logType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IsLiked", new object[] {
                    applicationKey,
                    accountId,
                    whereId,
                    logType}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIsLiked(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IsLikedAsync(string applicationKey, long accountId, long whereId, int logType)
        {
            this.IsLikedAsync(applicationKey, accountId, whereId, logType, null);
        }

        /// <remarks/>
        public void IsLikedAsync(string applicationKey, long accountId, long whereId, int logType, object userState)
        {
            if ((this.IsLikedOperationCompleted == null))
            {
                this.IsLikedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsLikedOperationCompleted);
            }
            this.InvokeAsync("IsLiked", new object[] {
                    applicationKey,
                    accountId,
                    whereId,
                    logType}, this.IsLikedOperationCompleted, userState);
        }

        private void OnIsLikedOperationCompleted(object arg)
        {
            if ((this.IsLikedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsLikedCompleted(this, new IsLikedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLikeCount", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLikeCount(string applicationKey, long whereId, int logType)
        {
            object[] results = this.Invoke("GetLikeCount", new object[] {
                    applicationKey,
                    whereId,
                    logType});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetLikeCount(string applicationKey, long whereId, int logType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetLikeCount", new object[] {
                    applicationKey,
                    whereId,
                    logType}, callback, asyncState);
        }

        /// <remarks/>
        public int EndGetLikeCount(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void GetLikeCountAsync(string applicationKey, long whereId, int logType)
        {
            this.GetLikeCountAsync(applicationKey, whereId, logType, null);
        }

        /// <remarks/>
        public void GetLikeCountAsync(string applicationKey, long whereId, int logType, object userState)
        {
            if ((this.GetLikeCountOperationCompleted == null))
            {
                this.GetLikeCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLikeCountOperationCompleted);
            }
            this.InvokeAsync("GetLikeCount", new object[] {
                    applicationKey,
                    whereId,
                    logType}, this.GetLikeCountOperationCompleted, userState);
        }

        private void OnGetLikeCountOperationCompleted(object arg)
        {
            if ((this.GetLikeCountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLikeCountCompleted(this, new GetLikeCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountLikeList", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAccountLikeList(string applicationKey, long accountId, int logType, int pageIndex, int pageSize, int sourceType)
        {
            object[] results = this.Invoke("GetAccountLikeList", new object[] {
                    applicationKey,
                    accountId,
                    logType,
                    pageIndex,
                    pageSize,
                    sourceType});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAccountLikeList(string applicationKey, long accountId, int logType, int pageIndex, int pageSize, int sourceType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAccountLikeList", new object[] {
                    applicationKey,
                    accountId,
                    logType,
                    pageIndex,
                    pageSize,
                    sourceType}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetAccountLikeList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetAccountLikeListAsync(string applicationKey, long accountId, int logType, int pageIndex, int pageSize, int sourceType)
        {
            this.GetAccountLikeListAsync(applicationKey, accountId, logType, pageIndex, pageSize, sourceType, null);
        }

        /// <remarks/>
        public void GetAccountLikeListAsync(string applicationKey, long accountId, int logType, int pageIndex, int pageSize, int sourceType, object userState)
        {
            if ((this.GetAccountLikeListOperationCompleted == null))
            {
                this.GetAccountLikeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountLikeListOperationCompleted);
            }
            this.InvokeAsync("GetAccountLikeList", new object[] {
                    applicationKey,
                    accountId,
                    logType,
                    pageIndex,
                    pageSize,
                    sourceType}, this.GetAccountLikeListOperationCompleted, userState);
        }

        private void OnGetAccountLikeListOperationCompleted(object arg)
        {
            if ((this.GetAccountLikeListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountLikeListCompleted(this, new GetAccountLikeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountLikeListObject", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EduLikeReturn GetAccountLikeListObject(string applicationKey, long accountId, int logType, int pageIndex, int pageSize)
        {
            object[] results = this.Invoke("GetAccountLikeListObject", new object[] {
                    applicationKey,
                    accountId,
                    logType,
                    pageIndex,
                    pageSize});
            return ((EduLikeReturn)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAccountLikeListObject(string applicationKey, long accountId, int logType, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAccountLikeListObject", new object[] {
                    applicationKey,
                    accountId,
                    logType,
                    pageIndex,
                    pageSize}, callback, asyncState);
        }

        /// <remarks/>
        public EduLikeReturn EndGetAccountLikeListObject(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((EduLikeReturn)(results[0]));
        }

        /// <remarks/>
        public void GetAccountLikeListObjectAsync(string applicationKey, long accountId, int logType, int pageIndex, int pageSize)
        {
            this.GetAccountLikeListObjectAsync(applicationKey, accountId, logType, pageIndex, pageSize, null);
        }

        /// <remarks/>
        public void GetAccountLikeListObjectAsync(string applicationKey, long accountId, int logType, int pageIndex, int pageSize, object userState)
        {
            if ((this.GetAccountLikeListObjectOperationCompleted == null))
            {
                this.GetAccountLikeListObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountLikeListObjectOperationCompleted);
            }
            this.InvokeAsync("GetAccountLikeListObject", new object[] {
                    applicationKey,
                    accountId,
                    logType,
                    pageIndex,
                    pageSize}, this.GetAccountLikeListObjectOperationCompleted, userState);
        }

        private void OnGetAccountLikeListObjectOperationCompleted(object arg)
        {
            if ((this.GetAccountLikeListObjectCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountLikeListObjectCompleted(this, new GetAccountLikeListObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelLike", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DelLike(string applicationKey, long accountId, long whereId, int logType)
        {
            object[] results = this.Invoke("DelLike", new object[] {
                    applicationKey,
                    accountId,
                    whereId,
                    logType});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDelLike(string applicationKey, long accountId, long whereId, int logType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DelLike", new object[] {
                    applicationKey,
                    accountId,
                    whereId,
                    logType}, callback, asyncState);
        }

        /// <remarks/>
        public int EndDelLike(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void DelLikeAsync(string applicationKey, long accountId, long whereId, int logType)
        {
            this.DelLikeAsync(applicationKey, accountId, whereId, logType, null);
        }

        /// <remarks/>
        public void DelLikeAsync(string applicationKey, long accountId, long whereId, int logType, object userState)
        {
            if ((this.DelLikeOperationCompleted == null))
            {
                this.DelLikeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelLikeOperationCompleted);
            }
            this.InvokeAsync("DelLike", new object[] {
                    applicationKey,
                    accountId,
                    whereId,
                    logType}, this.DelLikeOperationCompleted, userState);
        }

        private void OnDelLikeOperationCompleted(object arg)
        {
            if ((this.DelLikeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelLikeCompleted(this, new DelLikeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBlash", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBlash(string applicationKey, long accountId)
        {
            object[] results = this.Invoke("GetBlash", new object[] {
                    applicationKey,
                    accountId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetBlash(string applicationKey, long accountId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetBlash", new object[] {
                    applicationKey,
                    accountId}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetBlash(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetBlashAsync(string applicationKey, long accountId)
        {
            this.GetBlashAsync(applicationKey, accountId, null);
        }

        /// <remarks/>
        public void GetBlashAsync(string applicationKey, long accountId, object userState)
        {
            if ((this.GetBlashOperationCompleted == null))
            {
                this.GetBlashOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBlashOperationCompleted);
            }
            this.InvokeAsync("GetBlash", new object[] {
                    applicationKey,
                    accountId}, this.GetBlashOperationCompleted, userState);
        }

        private void OnGetBlashOperationCompleted(object arg)
        {
            if ((this.GetBlashCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBlashCompleted(this, new GetBlashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddEditPublicName", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddEditPublicName(EPublicName edit)
        {
            this.Invoke("AddEditPublicName", new object[] {
                    edit});
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddEditPublicName(EPublicName edit, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddEditPublicName", new object[] {
                    edit}, callback, asyncState);
        }

        /// <remarks/>
        public void EndAddEditPublicName(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void AddEditPublicNameAsync(EPublicName edit)
        {
            this.AddEditPublicNameAsync(edit, null);
        }

        /// <remarks/>
        public void AddEditPublicNameAsync(EPublicName edit, object userState)
        {
            if ((this.AddEditPublicNameOperationCompleted == null))
            {
                this.AddEditPublicNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEditPublicNameOperationCompleted);
            }
            this.InvokeAsync("AddEditPublicName", new object[] {
                    edit}, this.AddEditPublicNameOperationCompleted, userState);
        }

        private void OnAddEditPublicNameOperationCompleted(object arg)
        {
            if ((this.AddEditPublicNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEditPublicNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveLog", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RemoveLog(string applicationKey, long accountId, long whereId, int logType)
        {
            object[] results = this.Invoke("RemoveLog", new object[] {
                    applicationKey,
                    accountId,
                    whereId,
                    logType});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRemoveLog(string applicationKey, long accountId, long whereId, int logType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RemoveLog", new object[] {
                    applicationKey,
                    accountId,
                    whereId,
                    logType}, callback, asyncState);
        }

        /// <remarks/>
        public int EndRemoveLog(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void RemoveLogAsync(string applicationKey, long accountId, long whereId, int logType)
        {
            this.RemoveLogAsync(applicationKey, accountId, whereId, logType, null);
        }

        /// <remarks/>
        public void RemoveLogAsync(string applicationKey, long accountId, long whereId, int logType, object userState)
        {
            if ((this.RemoveLogOperationCompleted == null))
            {
                this.RemoveLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveLogOperationCompleted);
            }
            this.InvokeAsync("RemoveLog", new object[] {
                    applicationKey,
                    accountId,
                    whereId,
                    logType}, this.RemoveLogOperationCompleted, userState);
        }

        private void OnRemoveLogOperationCompleted(object arg)
        {
            if ((this.RemoveLogCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveLogCompleted(this, new RemoveLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveLogAvatar", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RemoveLogAvatar(string applicationKey, long accountId, int logType)
        {
            object[] results = this.Invoke("RemoveLogAvatar", new object[] {
                    applicationKey,
                    accountId,
                    logType});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRemoveLogAvatar(string applicationKey, long accountId, int logType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RemoveLogAvatar", new object[] {
                    applicationKey,
                    accountId,
                    logType}, callback, asyncState);
        }

        /// <remarks/>
        public int EndRemoveLogAvatar(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void RemoveLogAvatarAsync(string applicationKey, long accountId, int logType)
        {
            this.RemoveLogAvatarAsync(applicationKey, accountId, logType, null);
        }

        /// <remarks/>
        public void RemoveLogAvatarAsync(string applicationKey, long accountId, int logType, object userState)
        {
            if ((this.RemoveLogAvatarOperationCompleted == null))
            {
                this.RemoveLogAvatarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveLogAvatarOperationCompleted);
            }
            this.InvokeAsync("RemoveLogAvatar", new object[] {
                    applicationKey,
                    accountId,
                    logType}, this.RemoveLogAvatarOperationCompleted, userState);
        }

        private void OnRemoveLogAvatarOperationCompleted(object arg)
        {
            if ((this.RemoveLogAvatarCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveLogAvatarCompleted(this, new RemoveLogAvatarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveLikeComment", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveLikeComment(string applicationKey, ELikeComment likeComment)
        {
            object[] results = this.Invoke("RemoveLikeComment", new object[] {
                    applicationKey,
                    likeComment});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRemoveLikeComment(string applicationKey, ELikeComment likeComment, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RemoveLikeComment", new object[] {
                    applicationKey,
                    likeComment}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndRemoveLikeComment(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void RemoveLikeCommentAsync(string applicationKey, ELikeComment likeComment)
        {
            this.RemoveLikeCommentAsync(applicationKey, likeComment, null);
        }

        /// <remarks/>
        public void RemoveLikeCommentAsync(string applicationKey, ELikeComment likeComment, object userState)
        {
            if ((this.RemoveLikeCommentOperationCompleted == null))
            {
                this.RemoveLikeCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveLikeCommentOperationCompleted);
            }
            this.InvokeAsync("RemoveLikeComment", new object[] {
                    applicationKey,
                    likeComment}, this.RemoveLikeCommentOperationCompleted, userState);
        }

        private void OnRemoveLikeCommentOperationCompleted(object arg)
        {
            if ((this.RemoveLikeCommentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveLikeCommentCompleted(this, new RemoveLikeCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddViolation", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddViolation(string applicationKey, long lngContentId)
        {
            object[] results = this.Invoke("AddViolation", new object[] {
                    applicationKey,
                    lngContentId});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddViolation(string applicationKey, long lngContentId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddViolation", new object[] {
                    applicationKey,
                    lngContentId}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndAddViolation(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void AddViolationAsync(string applicationKey, long lngContentId)
        {
            this.AddViolationAsync(applicationKey, lngContentId, null);
        }

        /// <remarks/>
        public void AddViolationAsync(string applicationKey, long lngContentId, object userState)
        {
            if ((this.AddViolationOperationCompleted == null))
            {
                this.AddViolationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddViolationOperationCompleted);
            }
            this.InvokeAsync("AddViolation", new object[] {
                    applicationKey,
                    lngContentId}, this.AddViolationOperationCompleted, userState);
        }

        private void OnAddViolationOperationCompleted(object arg)
        {
            if ((this.AddViolationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddViolationCompleted(this, new AddViolationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFeedByListAccount", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Log[] GetFeedByListAccount(string applicationKey, long[] accountIds, int pageIndex, int pageSize, long lastLogId)
        {
            object[] results = this.Invoke("GetFeedByListAccount", new object[] {
                    applicationKey,
                    accountIds,
                    pageIndex,
                    pageSize,
                    lastLogId});
            return ((Log[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetFeedByListAccount(string applicationKey, long[] accountIds, int pageIndex, int pageSize, long lastLogId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetFeedByListAccount", new object[] {
                    applicationKey,
                    accountIds,
                    pageIndex,
                    pageSize,
                    lastLogId}, callback, asyncState);
        }

        /// <remarks/>
        public Log[] EndGetFeedByListAccount(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((Log[])(results[0]));
        }

        /// <remarks/>
        public void GetFeedByListAccountAsync(string applicationKey, long[] accountIds, int pageIndex, int pageSize, long lastLogId)
        {
            this.GetFeedByListAccountAsync(applicationKey, accountIds, pageIndex, pageSize, lastLogId, null);
        }

        /// <remarks/>
        public void GetFeedByListAccountAsync(string applicationKey, long[] accountIds, int pageIndex, int pageSize, long lastLogId, object userState)
        {
            if ((this.GetFeedByListAccountOperationCompleted == null))
            {
                this.GetFeedByListAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeedByListAccountOperationCompleted);
            }
            this.InvokeAsync("GetFeedByListAccount", new object[] {
                    applicationKey,
                    accountIds,
                    pageIndex,
                    pageSize,
                    lastLogId}, this.GetFeedByListAccountOperationCompleted, userState);
        }

        private void OnGetFeedByListAccountOperationCompleted(object arg)
        {
            if ((this.GetFeedByListAccountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeedByListAccountCompleted(this, new GetFeedByListAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddApplication", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddApplication(string applicationKey, EApplication app)
        {
            object[] results = this.Invoke("AddApplication", new object[] {
                    applicationKey,
                    app});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddApplication(string applicationKey, EApplication app, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddApplication", new object[] {
                    applicationKey,
                    app}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddApplication(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddApplicationAsync(string applicationKey, EApplication app)
        {
            this.AddApplicationAsync(applicationKey, app, null);
        }

        /// <remarks/>
        public void AddApplicationAsync(string applicationKey, EApplication app, object userState)
        {
            if ((this.AddApplicationOperationCompleted == null))
            {
                this.AddApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddApplicationOperationCompleted);
            }
            this.InvokeAsync("AddApplication", new object[] {
                    applicationKey,
                    app}, this.AddApplicationOperationCompleted, userState);
        }

        private void OnAddApplicationOperationCompleted(object arg)
        {
            if ((this.AddApplicationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddApplicationCompleted(this, new AddApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateApplication", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateApplication(string applicationKey, EApplication app, int applicationId)
        {
            object[] results = this.Invoke("UpdateApplication", new object[] {
                    applicationKey,
                    app,
                    applicationId});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateApplication(string applicationKey, EApplication app, int applicationId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateApplication", new object[] {
                    applicationKey,
                    app,
                    applicationId}, callback, asyncState);
        }

        /// <remarks/>
        public int EndUpdateApplication(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void UpdateApplicationAsync(string applicationKey, EApplication app, int applicationId)
        {
            this.UpdateApplicationAsync(applicationKey, app, applicationId, null);
        }

        /// <remarks/>
        public void UpdateApplicationAsync(string applicationKey, EApplication app, int applicationId, object userState)
        {
            if ((this.UpdateApplicationOperationCompleted == null))
            {
                this.UpdateApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateApplicationOperationCompleted);
            }
            this.InvokeAsync("UpdateApplication", new object[] {
                    applicationKey,
                    app,
                    applicationId}, this.UpdateApplicationOperationCompleted, userState);
        }

        private void OnUpdateApplicationOperationCompleted(object arg)
        {
            if ((this.UpdateApplicationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateApplicationCompleted(this, new UpdateApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateExInfoApplication", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateExInfoApplication(string applicationKey, string callBackUrl, string icon, string appName, int applicationId)
        {
            object[] results = this.Invoke("UpdateExInfoApplication", new object[] {
                    applicationKey,
                    callBackUrl,
                    icon,
                    appName,
                    applicationId});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateExInfoApplication(string applicationKey, string callBackUrl, string icon, string appName, int applicationId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateExInfoApplication", new object[] {
                    applicationKey,
                    callBackUrl,
                    icon,
                    appName,
                    applicationId}, callback, asyncState);
        }

        /// <remarks/>
        public int EndUpdateExInfoApplication(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void UpdateExInfoApplicationAsync(string applicationKey, string callBackUrl, string icon, string appName, int applicationId)
        {
            this.UpdateExInfoApplicationAsync(applicationKey, callBackUrl, icon, appName, applicationId, null);
        }

        /// <remarks/>
        public void UpdateExInfoApplicationAsync(string applicationKey, string callBackUrl, string icon, string appName, int applicationId, object userState)
        {
            if ((this.UpdateExInfoApplicationOperationCompleted == null))
            {
                this.UpdateExInfoApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateExInfoApplicationOperationCompleted);
            }
            this.InvokeAsync("UpdateExInfoApplication", new object[] {
                    applicationKey,
                    callBackUrl,
                    icon,
                    appName,
                    applicationId}, this.UpdateExInfoApplicationOperationCompleted, userState);
        }

        private void OnUpdateExInfoApplicationOperationCompleted(object arg)
        {
            if ((this.UpdateExInfoApplicationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateExInfoApplicationCompleted(this, new UpdateExInfoApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteApplication", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteApplication(string applicationKey, int applicationId)
        {
            object[] results = this.Invoke("DeleteApplication", new object[] {
                    applicationKey,
                    applicationId});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDeleteApplication(string applicationKey, int applicationId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DeleteApplication", new object[] {
                    applicationKey,
                    applicationId}, callback, asyncState);
        }

        /// <remarks/>
        public int EndDeleteApplication(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void DeleteApplicationAsync(string applicationKey, int applicationId)
        {
            this.DeleteApplicationAsync(applicationKey, applicationId, null);
        }

        /// <remarks/>
        public void DeleteApplicationAsync(string applicationKey, int applicationId, object userState)
        {
            if ((this.DeleteApplicationOperationCompleted == null))
            {
                this.DeleteApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteApplicationOperationCompleted);
            }
            this.InvokeAsync("DeleteApplication", new object[] {
                    applicationKey,
                    applicationId}, this.DeleteApplicationOperationCompleted, userState);
        }

        private void OnDeleteApplicationOperationCompleted(object arg)
        {
            if ((this.DeleteApplicationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteApplicationCompleted(this, new DeleteApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetApplication", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetApplication(int applicationId)
        {
            object[] results = this.Invoke("GetApplication", new object[] {
                    applicationId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetApplication(int applicationId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetApplication", new object[] {
                    applicationId}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetApplication(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetApplicationAsync(int applicationId)
        {
            this.GetApplicationAsync(applicationId, null);
        }

        /// <remarks/>
        public void GetApplicationAsync(int applicationId, object userState)
        {
            if ((this.GetApplicationOperationCompleted == null))
            {
                this.GetApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicationOperationCompleted);
            }
            this.InvokeAsync("GetApplication", new object[] {
                    applicationId}, this.GetApplicationOperationCompleted, userState);
        }

        private void OnGetApplicationOperationCompleted(object arg)
        {
            if ((this.GetApplicationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplicationCompleted(this, new GetApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SentMessage", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SentMessage(Message _Message, int option)
        {
            object[] results = this.Invoke("SentMessage", new object[] {
                    _Message,
                    option});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSentMessage(Message _Message, int option, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SentMessage", new object[] {
                    _Message,
                    option}, callback, asyncState);
        }

        /// <remarks/>
        public int EndSentMessage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void SentMessageAsync(Message _Message, int option)
        {
            this.SentMessageAsync(_Message, option, null);
        }

        /// <remarks/>
        public void SentMessageAsync(Message _Message, int option, object userState)
        {
            if ((this.SentMessageOperationCompleted == null))
            {
                this.SentMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSentMessageOperationCompleted);
            }
            this.InvokeAsync("SentMessage", new object[] {
                    _Message,
                    option}, this.SentMessageOperationCompleted, userState);
        }

        private void OnSentMessageOperationCompleted(object arg)
        {
            if ((this.SentMessageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SentMessageCompleted(this, new SentMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStatistic", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStatistic(string applicationKey, long accountId)
        {
            object[] results = this.Invoke("GetStatistic", new object[] {
                    applicationKey,
                    accountId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetStatistic(string applicationKey, long accountId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetStatistic", new object[] {
                    applicationKey,
                    accountId}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetStatistic(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetStatisticAsync(string applicationKey, long accountId)
        {
            this.GetStatisticAsync(applicationKey, accountId, null);
        }

        /// <remarks/>
        public void GetStatisticAsync(string applicationKey, long accountId, object userState)
        {
            if ((this.GetStatisticOperationCompleted == null))
            {
                this.GetStatisticOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatisticOperationCompleted);
            }
            this.InvokeAsync("GetStatistic", new object[] {
                    applicationKey,
                    accountId}, this.GetStatisticOperationCompleted, userState);
        }

        private void OnGetStatisticOperationCompleted(object arg)
        {
            if ((this.GetStatisticCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatisticCompleted(this, new GetStatisticCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRecentActivity", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRecentActivity(string applicationKey, long[] accounts)
        {
            object[] results = this.Invoke("GetRecentActivity", new object[] {
                    applicationKey,
                    accounts});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetRecentActivity(string applicationKey, long[] accounts, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetRecentActivity", new object[] {
                    applicationKey,
                    accounts}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetRecentActivity(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetRecentActivityAsync(string applicationKey, long[] accounts)
        {
            this.GetRecentActivityAsync(applicationKey, accounts, null);
        }

        /// <remarks/>
        public void GetRecentActivityAsync(string applicationKey, long[] accounts, object userState)
        {
            if ((this.GetRecentActivityOperationCompleted == null))
            {
                this.GetRecentActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecentActivityOperationCompleted);
            }
            this.InvokeAsync("GetRecentActivity", new object[] {
                    applicationKey,
                    accounts}, this.GetRecentActivityOperationCompleted, userState);
        }

        private void OnGetRecentActivityOperationCompleted(object arg)
        {
            if ((this.GetRecentActivityCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecentActivityCompleted(this, new GetRecentActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCommentDetail", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCommentDetail(string applicationKey, long[] listIds)
        {
            object[] results = this.Invoke("GetCommentDetail", new object[] {
                    applicationKey,
                    listIds});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCommentDetail(string applicationKey, long[] listIds, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCommentDetail", new object[] {
                    applicationKey,
                    listIds}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetCommentDetail(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetCommentDetailAsync(string applicationKey, long[] listIds)
        {
            this.GetCommentDetailAsync(applicationKey, listIds, null);
        }

        /// <remarks/>
        public void GetCommentDetailAsync(string applicationKey, long[] listIds, object userState)
        {
            if ((this.GetCommentDetailOperationCompleted == null))
            {
                this.GetCommentDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentDetailOperationCompleted);
            }
            this.InvokeAsync("GetCommentDetail", new object[] {
                    applicationKey,
                    listIds}, this.GetCommentDetailOperationCompleted, userState);
        }

        private void OnGetCommentDetailOperationCompleted(object arg)
        {
            if ((this.GetCommentDetailCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentDetailCompleted(this, new GetCommentDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class PublicConsumer
    {

        private int idField;

        private string nameField;

        /// <remarks/>
        public int Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class Message
    {

        private string subjectField;

        private string contentField;

        private string senderNameField;

        private long senderIdField;

        private string[] receiverNameField;

        private long[] receiverIdField;

        /// <remarks/>
        public string Subject
        {
            get
            {
                return this.subjectField;
            }
            set
            {
                this.subjectField = value;
            }
        }

        /// <remarks/>
        public string Content
        {
            get
            {
                return this.contentField;
            }
            set
            {
                this.contentField = value;
            }
        }

        /// <remarks/>
        public string SenderName
        {
            get
            {
                return this.senderNameField;
            }
            set
            {
                this.senderNameField = value;
            }
        }

        /// <remarks/>
        public long SenderId
        {
            get
            {
                return this.senderIdField;
            }
            set
            {
                this.senderIdField = value;
            }
        }

        /// <remarks/>
        public string[] ReceiverName
        {
            get
            {
                return this.receiverNameField;
            }
            set
            {
                this.receiverNameField = value;
            }
        }

        /// <remarks/>
        public long[] ReceiverId
        {
            get
            {
                return this.receiverIdField;
            }
            set
            {
                this.receiverIdField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class EApplication
    {

        private int idField;

        private string nameField;

        private string applicationKeyField;

        private string urlField;

        private string callBackUrlField;

        private string iconField;

        private string descriptionField;

        private int statusField;

        /// <remarks/>
        public int Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public string ApplicationKey
        {
            get
            {
                return this.applicationKeyField;
            }
            set
            {
                this.applicationKeyField = value;
            }
        }

        /// <remarks/>
        public string Url
        {
            get
            {
                return this.urlField;
            }
            set
            {
                this.urlField = value;
            }
        }

        /// <remarks/>
        public string CallBackUrl
        {
            get
            {
                return this.callBackUrlField;
            }
            set
            {
                this.callBackUrlField = value;
            }
        }

        /// <remarks/>
        public string Icon
        {
            get
            {
                return this.iconField;
            }
            set
            {
                this.iconField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public int Status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class Log
    {

        private long sourceUserIdField;

        private long destUserIdField;

        private long whereIdField;

        private int logTypeField;

        private string messageField;

        private System.DateTime createTimeField;

        private int commentCountField;

        private string commentListField;

        private int likeCountField;

        private string likeListField;

        private string likeCommentListField;

        private string permanentLinkField;

        private int sourcePostField;

        private string hashCodeField;

        private int privacyField;

        private string sourceUserNameField;

        private string destUserNameField;

        private byte violationReportField;

        private long idField;

        private byte statusField;

        /// <remarks/>
        public long SourceUserId
        {
            get
            {
                return this.sourceUserIdField;
            }
            set
            {
                this.sourceUserIdField = value;
            }
        }

        /// <remarks/>
        public long DestUserId
        {
            get
            {
                return this.destUserIdField;
            }
            set
            {
                this.destUserIdField = value;
            }
        }

        /// <remarks/>
        public long WhereId
        {
            get
            {
                return this.whereIdField;
            }
            set
            {
                this.whereIdField = value;
            }
        }

        /// <remarks/>
        public int LogType
        {
            get
            {
                return this.logTypeField;
            }
            set
            {
                this.logTypeField = value;
            }
        }

        /// <remarks/>
        public string Message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }

        /// <remarks/>
        public System.DateTime CreateTime
        {
            get
            {
                return this.createTimeField;
            }
            set
            {
                this.createTimeField = value;
            }
        }

        /// <remarks/>
        public int CommentCount
        {
            get
            {
                return this.commentCountField;
            }
            set
            {
                this.commentCountField = value;
            }
        }

        /// <remarks/>
        public string CommentList
        {
            get
            {
                return this.commentListField;
            }
            set
            {
                this.commentListField = value;
            }
        }

        /// <remarks/>
        public int LikeCount
        {
            get
            {
                return this.likeCountField;
            }
            set
            {
                this.likeCountField = value;
            }
        }

        /// <remarks/>
        public string LikeList
        {
            get
            {
                return this.likeListField;
            }
            set
            {
                this.likeListField = value;
            }
        }

        /// <remarks/>
        public string LikeCommentList
        {
            get
            {
                return this.likeCommentListField;
            }
            set
            {
                this.likeCommentListField = value;
            }
        }

        /// <remarks/>
        public string PermanentLink
        {
            get
            {
                return this.permanentLinkField;
            }
            set
            {
                this.permanentLinkField = value;
            }
        }

        /// <remarks/>
        public int SourcePost
        {
            get
            {
                return this.sourcePostField;
            }
            set
            {
                this.sourcePostField = value;
            }
        }

        /// <remarks/>
        public string HashCode
        {
            get
            {
                return this.hashCodeField;
            }
            set
            {
                this.hashCodeField = value;
            }
        }

        /// <remarks/>
        public int Privacy
        {
            get
            {
                return this.privacyField;
            }
            set
            {
                this.privacyField = value;
            }
        }

        /// <remarks/>
        public string SourceUserName
        {
            get
            {
                return this.sourceUserNameField;
            }
            set
            {
                this.sourceUserNameField = value;
            }
        }

        /// <remarks/>
        public string DestUserName
        {
            get
            {
                return this.destUserNameField;
            }
            set
            {
                this.destUserNameField = value;
            }
        }

        /// <remarks/>
        public byte ViolationReport
        {
            get
            {
                return this.violationReportField;
            }
            set
            {
                this.violationReportField = value;
            }
        }

        /// <remarks/>
        public long Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public byte Status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class EPublicName
    {

        private long accountIdField;

        private string oldPublicNameField;

        private string newPublicnNameField;

        /// <remarks/>
        public long AccountId
        {
            get
            {
                return this.accountIdField;
            }
            set
            {
                this.accountIdField = value;
            }
        }

        /// <remarks/>
        public string OldPublicName
        {
            get
            {
                return this.oldPublicNameField;
            }
            set
            {
                this.oldPublicNameField = value;
            }
        }

        /// <remarks/>
        public string NewPublicnName
        {
            get
            {
                return this.newPublicnNameField;
            }
            set
            {
                this.newPublicnNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class EduLikeObject
    {

        private long whereIdField;

        private System.DateTime timeField;

        /// <remarks/>
        public long WhereId
        {
            get
            {
                return this.whereIdField;
            }
            set
            {
                this.whereIdField = value;
            }
        }

        /// <remarks/>
        public System.DateTime Time
        {
            get
            {
                return this.timeField;
            }
            set
            {
                this.timeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class EduLikeReturn
    {

        private int totalRowsField;

        private EduLikeObject[] itemsField;

        /// <remarks/>
        public int TotalRows
        {
            get
            {
                return this.totalRowsField;
            }
            set
            {
                this.totalRowsField = value;
            }
        }

        /// <remarks/>
        public EduLikeObject[] Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class ELike
    {

        private long logIdField;

        private long whereIdField;

        private int logTypeField;

        private long accountIdField;

        private string accountNameField;

        private long destAccountIdField;

        private string destAccountNameField;

        private string urlDetailField;

        /// <remarks/>
        public long LogId
        {
            get
            {
                return this.logIdField;
            }
            set
            {
                this.logIdField = value;
            }
        }

        /// <remarks/>
        public long WhereId
        {
            get
            {
                return this.whereIdField;
            }
            set
            {
                this.whereIdField = value;
            }
        }

        /// <remarks/>
        public int LogType
        {
            get
            {
                return this.logTypeField;
            }
            set
            {
                this.logTypeField = value;
            }
        }

        /// <remarks/>
        public long AccountId
        {
            get
            {
                return this.accountIdField;
            }
            set
            {
                this.accountIdField = value;
            }
        }

        /// <remarks/>
        public string AccountName
        {
            get
            {
                return this.accountNameField;
            }
            set
            {
                this.accountNameField = value;
            }
        }

        /// <remarks/>
        public long DestAccountId
        {
            get
            {
                return this.destAccountIdField;
            }
            set
            {
                this.destAccountIdField = value;
            }
        }

        /// <remarks/>
        public string DestAccountName
        {
            get
            {
                return this.destAccountNameField;
            }
            set
            {
                this.destAccountNameField = value;
            }
        }

        /// <remarks/>
        public string UrlDetail
        {
            get
            {
                return this.urlDetailField;
            }
            set
            {
                this.urlDetailField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class LikeObject
    {

        private string accountNameField;

        private long accountIdField;

        /// <remarks/>
        public string AccountName
        {
            get
            {
                return this.accountNameField;
            }
            set
            {
                this.accountNameField = value;
            }
        }

        /// <remarks/>
        public long AccountId
        {
            get
            {
                return this.accountIdField;
            }
            set
            {
                this.accountIdField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class ELikeComment
    {

        private long whereIdField;

        private int logTypeField;

        private long commentIdField;

        private long accountIdField;

        private string accountNameField;

        private long ownerCommentIdField;

        private string urlDetailField;

        /// <remarks/>
        public long WhereId
        {
            get
            {
                return this.whereIdField;
            }
            set
            {
                this.whereIdField = value;
            }
        }

        /// <remarks/>
        public int LogType
        {
            get
            {
                return this.logTypeField;
            }
            set
            {
                this.logTypeField = value;
            }
        }

        /// <remarks/>
        public long CommentId
        {
            get
            {
                return this.commentIdField;
            }
            set
            {
                this.commentIdField = value;
            }
        }

        /// <remarks/>
        public long AccountId
        {
            get
            {
                return this.accountIdField;
            }
            set
            {
                this.accountIdField = value;
            }
        }

        /// <remarks/>
        public string AccountName
        {
            get
            {
                return this.accountNameField;
            }
            set
            {
                this.accountNameField = value;
            }
        }

        /// <remarks/>
        public long OwnerCommentId
        {
            get
            {
                return this.ownerCommentIdField;
            }
            set
            {
                this.ownerCommentIdField = value;
            }
        }

        /// <remarks/>
        public string UrlDetail
        {
            get
            {
                return this.urlDetailField;
            }
            set
            {
                this.urlDetailField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class EComment
    {

        private long whereIdField;

        private long sourceAccountIdField;

        private long destAccountIdField;

        private string messageField;

        private string sourceAccountNameField;

        private string destAccountNameField;

        private int logTypeField;

        private string urlDetailField;

        /// <remarks/>
        public long WhereId
        {
            get
            {
                return this.whereIdField;
            }
            set
            {
                this.whereIdField = value;
            }
        }

        /// <remarks/>
        public long SourceAccountId
        {
            get
            {
                return this.sourceAccountIdField;
            }
            set
            {
                this.sourceAccountIdField = value;
            }
        }

        /// <remarks/>
        public long DestAccountId
        {
            get
            {
                return this.destAccountIdField;
            }
            set
            {
                this.destAccountIdField = value;
            }
        }

        /// <remarks/>
        public string Message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }

        /// <remarks/>
        public string SourceAccountName
        {
            get
            {
                return this.sourceAccountNameField;
            }
            set
            {
                this.sourceAccountNameField = value;
            }
        }

        /// <remarks/>
        public string DestAccountName
        {
            get
            {
                return this.destAccountNameField;
            }
            set
            {
                this.destAccountNameField = value;
            }
        }

        /// <remarks/>
        public int LogType
        {
            get
            {
                return this.logTypeField;
            }
            set
            {
                this.logTypeField = value;
            }
        }

        /// <remarks/>
        public string UrlDetail
        {
            get
            {
                return this.urlDetailField;
            }
            set
            {
                this.urlDetailField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class AccountGameAction
    {

        private string thumbsField;

        private string descriptionField;

        private string headerField;

        private long sourceAccountIdField;

        private string sourceAccountNameField;

        private string sourceCharacterNameField;

        private System.DateTime createTimeField;

        /// <remarks/>
        public string Thumbs
        {
            get
            {
                return this.thumbsField;
            }
            set
            {
                this.thumbsField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public string Header
        {
            get
            {
                return this.headerField;
            }
            set
            {
                this.headerField = value;
            }
        }

        /// <remarks/>
        public long SourceAccountId
        {
            get
            {
                return this.sourceAccountIdField;
            }
            set
            {
                this.sourceAccountIdField = value;
            }
        }

        /// <remarks/>
        public string SourceAccountName
        {
            get
            {
                return this.sourceAccountNameField;
            }
            set
            {
                this.sourceAccountNameField = value;
            }
        }

        /// <remarks/>
        public string SourceCharacterName
        {
            get
            {
                return this.sourceCharacterNameField;
            }
            set
            {
                this.sourceCharacterNameField = value;
            }
        }

        /// <remarks/>
        public System.DateTime CreateTime
        {
            get
            {
                return this.createTimeField;
            }
            set
            {
                this.createTimeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class GameRequest
    {

        private long idField;

        private long sourceAccountIdField;

        private long destAccountIdField;

        private string actionTextField;

        private string descriptionField;

        private string thumbsField;

        private string appNameField;

        private string linkAppField;

        private string linkAcceptField;

        private int appIdField;

        private System.DateTime createTimeField;

        private byte statusField;

        private string sourceAccountNameField;

        /// <remarks/>
        public long Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public long SourceAccountId
        {
            get
            {
                return this.sourceAccountIdField;
            }
            set
            {
                this.sourceAccountIdField = value;
            }
        }

        /// <remarks/>
        public long DestAccountId
        {
            get
            {
                return this.destAccountIdField;
            }
            set
            {
                this.destAccountIdField = value;
            }
        }

        /// <remarks/>
        public string ActionText
        {
            get
            {
                return this.actionTextField;
            }
            set
            {
                this.actionTextField = value;
            }
        }

        /// <remarks/>
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        /// <remarks/>
        public string Thumbs
        {
            get
            {
                return this.thumbsField;
            }
            set
            {
                this.thumbsField = value;
            }
        }

        /// <remarks/>
        public string AppName
        {
            get
            {
                return this.appNameField;
            }
            set
            {
                this.appNameField = value;
            }
        }

        /// <remarks/>
        public string LinkApp
        {
            get
            {
                return this.linkAppField;
            }
            set
            {
                this.linkAppField = value;
            }
        }

        /// <remarks/>
        public string LinkAccept
        {
            get
            {
                return this.linkAcceptField;
            }
            set
            {
                this.linkAcceptField = value;
            }
        }

        /// <remarks/>
        public int AppId
        {
            get
            {
                return this.appIdField;
            }
            set
            {
                this.appIdField = value;
            }
        }

        /// <remarks/>
        public System.DateTime CreateTime
        {
            get
            {
                return this.createTimeField;
            }
            set
            {
                this.createTimeField = value;
            }
        }

        /// <remarks/>
        public byte Status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }

        /// <remarks/>
        public string SourceAccountName
        {
            get
            {
                return this.sourceAccountNameField;
            }
            set
            {
                this.sourceAccountNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class AccountAction
    {

        private long idField;

        private long sourceAccountIdField;

        private string sourceAccountNameField;

        private long destAccountIdField;

        private string destAccountNameField;

        private long whereIdField;

        private long imageIdField;

        private int logTypeField;

        private string messageField;

        private int privacyField;

        private int sourcePostField;

        private System.DateTime createTimeField;

        /// <remarks/>
        public long Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public long SourceAccountId
        {
            get
            {
                return this.sourceAccountIdField;
            }
            set
            {
                this.sourceAccountIdField = value;
            }
        }

        /// <remarks/>
        public string SourceAccountName
        {
            get
            {
                return this.sourceAccountNameField;
            }
            set
            {
                this.sourceAccountNameField = value;
            }
        }

        /// <remarks/>
        public long DestAccountId
        {
            get
            {
                return this.destAccountIdField;
            }
            set
            {
                this.destAccountIdField = value;
            }
        }

        /// <remarks/>
        public string DestAccountName
        {
            get
            {
                return this.destAccountNameField;
            }
            set
            {
                this.destAccountNameField = value;
            }
        }

        /// <remarks/>
        public long WhereId
        {
            get
            {
                return this.whereIdField;
            }
            set
            {
                this.whereIdField = value;
            }
        }

        /// <remarks/>
        public long ImageId
        {
            get
            {
                return this.imageIdField;
            }
            set
            {
                this.imageIdField = value;
            }
        }

        /// <remarks/>
        public int LogType
        {
            get
            {
                return this.logTypeField;
            }
            set
            {
                this.logTypeField = value;
            }
        }

        /// <remarks/>
        public string Message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }

        /// <remarks/>
        public int Privacy
        {
            get
            {
                return this.privacyField;
            }
            set
            {
                this.privacyField = value;
            }
        }

        /// <remarks/>
        public int SourcePost
        {
            get
            {
                return this.sourcePostField;
            }
            set
            {
                this.sourcePostField = value;
            }
        }

        /// <remarks/>
        public System.DateTime CreateTime
        {
            get
            {
                return this.createTimeField;
            }
            set
            {
                this.createTimeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void CheckAllowAppRequestCompletedEventHandler(object sender, CheckAllowAppRequestCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAllowAppRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CheckAllowAppRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void ApproveConsumerCompletedEventHandler(object sender, ApproveConsumerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveConsumerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ApproveConsumerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void CheckApproveConsumerCompletedEventHandler(object sender, CheckApproveConsumerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckApproveConsumerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CheckApproveConsumerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void PublishCompletedEventHandler(object sender, PublishCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PublishCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal PublishCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetPostByIdCompletedEventHandler(object sender, GetPostByIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetPostByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void PostGameRequestCompletedEventHandler(object sender, PostGameRequestCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostGameRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal PostGameRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GamePublishCompletedEventHandler(object sender, GamePublishCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GamePublishCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GamePublishCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void PublishJsonCompletedEventHandler(object sender, PublishJsonCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PublishJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal PublishJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void AddCommentCompletedEventHandler(object sender, AddCommentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public long Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void AddLikeCommentCompletedEventHandler(object sender, AddLikeCommentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLikeCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddLikeCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public long Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void AddCommentJsonCompletedEventHandler(object sender, AddCommentJsonCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCommentJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddCommentJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public long Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetCommentCompletedEventHandler(object sender, GetCommentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetCommentsByListBlogIdCompletedEventHandler(object sender, GetCommentsByListBlogIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentsByListBlogIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCommentsByListBlogIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetCommentPagingCompletedEventHandler(object sender, GetCommentPagingCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentPagingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCommentPagingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetTopCommentsCompletedEventHandler(object sender, GetTopCommentsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTopCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetTopCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void DeleteCommentCompletedEventHandler(object sender, DeleteCommentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DeleteCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetLikeListCompletedEventHandler(object sender, GetLikeListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLikeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetLikeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetLikeCompletedEventHandler(object sender, GetLikeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLikeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetLikeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public LikeObject[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((LikeObject[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetFeedCompletedEventHandler(object sender, GetFeedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetFeedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetWallCompletedEventHandler(object sender, GetWallCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetWallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetMobileFeedCompletedEventHandler(object sender, GetMobileFeedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMobileFeedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetMobileFeedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetMobileProfileCompletedEventHandler(object sender, GetMobileProfileCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMobileProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetMobileProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void PostStatusCompletedEventHandler(object sender, PostStatusCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal PostStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void WriteOnFriendWallCompletedEventHandler(object sender, WriteOnFriendWallCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteOnFriendWallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal WriteOnFriendWallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void AddLikeCompletedEventHandler(object sender, AddLikeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLikeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddLikeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void AddLikeJsonCompletedEventHandler(object sender, AddLikeJsonCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLikeJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddLikeJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void IsLikedCompletedEventHandler(object sender, IsLikedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsLikedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IsLikedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetLikeCountCompletedEventHandler(object sender, GetLikeCountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLikeCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetLikeCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetAccountLikeListCompletedEventHandler(object sender, GetAccountLikeListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountLikeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetAccountLikeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetAccountLikeListObjectCompletedEventHandler(object sender, GetAccountLikeListObjectCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountLikeListObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetAccountLikeListObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public EduLikeReturn Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((EduLikeReturn)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void DelLikeCompletedEventHandler(object sender, DelLikeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelLikeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DelLikeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetBlashCompletedEventHandler(object sender, GetBlashCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBlashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetBlashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void AddEditPublicNameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void RemoveLogCompletedEventHandler(object sender, RemoveLogCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RemoveLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void RemoveLogAvatarCompletedEventHandler(object sender, RemoveLogAvatarCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveLogAvatarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RemoveLogAvatarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void RemoveLikeCommentCompletedEventHandler(object sender, RemoveLikeCommentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveLikeCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RemoveLikeCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void AddViolationCompletedEventHandler(object sender, AddViolationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddViolationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddViolationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetFeedByListAccountCompletedEventHandler(object sender, GetFeedByListAccountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeedByListAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetFeedByListAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public Log[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((Log[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void AddApplicationCompletedEventHandler(object sender, AddApplicationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void UpdateApplicationCompletedEventHandler(object sender, UpdateApplicationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal UpdateApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void UpdateExInfoApplicationCompletedEventHandler(object sender, UpdateExInfoApplicationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateExInfoApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal UpdateExInfoApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void DeleteApplicationCompletedEventHandler(object sender, DeleteApplicationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DeleteApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetApplicationCompletedEventHandler(object sender, GetApplicationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SentMessageCompletedEventHandler(object sender, SentMessageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SentMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SentMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetStatisticCompletedEventHandler(object sender, GetStatisticCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatisticCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetStatisticCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetRecentActivityCompletedEventHandler(object sender, GetRecentActivityCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecentActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetRecentActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetCommentDetailCompletedEventHandler(object sender, GetCommentDetailCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCommentDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}