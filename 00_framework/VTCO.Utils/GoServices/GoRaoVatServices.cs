//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;
namespace VTCO.Utils.GoServices.GoRaoVat
{
    // 
    // This source code was auto-generated by wsdl, Version=4.0.30319.1.
    // 


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "WSfaqSoap", Namespace = "http://tempuri.org/")]
    public partial class WSfaq : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback GetQAListOperationCompleted;

        private System.Threading.SendOrPostCallback GetWantAdsListOperationCompleted;

        private System.Threading.SendOrPostCallback GetListQuestionQAByCategoryOperationCompleted;

        private System.Threading.SendOrPostCallback GetListQuestionQAByUserOperationCompleted;

        private System.Threading.SendOrPostCallback GetListAnswerQAOperationCompleted;

        private System.Threading.SendOrPostCallback SendAnswerQAOperationCompleted;

        private System.Threading.SendOrPostCallback GetQADetailsOperationCompleted;

        /// <remarks/>
        public WSfaq()
        {
            this.Url = VTCO.Config.Global.Settings.WSGoRaoVat;// "http://raovat.goonline.vn/Webservices/WSfaq.asmx";
        }

        /// <remarks/>
        public event GetQAListCompletedEventHandler GetQAListCompleted;

        /// <remarks/>
        public event GetWantAdsListCompletedEventHandler GetWantAdsListCompleted;

        /// <remarks/>
        public event GetListQuestionQAByCategoryCompletedEventHandler GetListQuestionQAByCategoryCompleted;

        /// <remarks/>
        public event GetListQuestionQAByUserCompletedEventHandler GetListQuestionQAByUserCompleted;

        /// <remarks/>
        public event GetListAnswerQACompletedEventHandler GetListAnswerQACompleted;

        /// <remarks/>
        public event SendAnswerQACompletedEventHandler SendAnswerQACompleted;

        /// <remarks/>
        public event GetQADetailsCompletedEventHandler GetQADetailsCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQAList", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FAQResult[] GetQAList(int categoryID, int numberRecord)
        {
            object[] results = this.Invoke("GetQAList", new object[] {
                    categoryID,
                    numberRecord});
            return ((FAQResult[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetQAList(int categoryID, int numberRecord, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetQAList", new object[] {
                    categoryID,
                    numberRecord}, callback, asyncState);
        }

        /// <remarks/>
        public FAQResult[] EndGetQAList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((FAQResult[])(results[0]));
        }

        /// <remarks/>
        public void GetQAListAsync(int categoryID, int numberRecord)
        {
            this.GetQAListAsync(categoryID, numberRecord, null);
        }

        /// <remarks/>
        public void GetQAListAsync(int categoryID, int numberRecord, object userState)
        {
            if ((this.GetQAListOperationCompleted == null))
            {
                this.GetQAListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQAListOperationCompleted);
            }
            this.InvokeAsync("GetQAList", new object[] {
                    categoryID,
                    numberRecord}, this.GetQAListOperationCompleted, userState);
        }

        private void OnGetQAListOperationCompleted(object arg)
        {
            if ((this.GetQAListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQAListCompleted(this, new GetQAListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWantAdsList", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FAQResult[] GetWantAdsList(int categoryID, int numberRecord)
        {
            object[] results = this.Invoke("GetWantAdsList", new object[] {
                    categoryID,
                    numberRecord});
            return ((FAQResult[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetWantAdsList(int categoryID, int numberRecord, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetWantAdsList", new object[] {
                    categoryID,
                    numberRecord}, callback, asyncState);
        }

        /// <remarks/>
        public FAQResult[] EndGetWantAdsList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((FAQResult[])(results[0]));
        }

        /// <remarks/>
        public void GetWantAdsListAsync(int categoryID, int numberRecord)
        {
            this.GetWantAdsListAsync(categoryID, numberRecord, null);
        }

        /// <remarks/>
        public void GetWantAdsListAsync(int categoryID, int numberRecord, object userState)
        {
            if ((this.GetWantAdsListOperationCompleted == null))
            {
                this.GetWantAdsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWantAdsListOperationCompleted);
            }
            this.InvokeAsync("GetWantAdsList", new object[] {
                    categoryID,
                    numberRecord}, this.GetWantAdsListOperationCompleted, userState);
        }

        private void OnGetWantAdsListOperationCompleted(object arg)
        {
            if ((this.GetWantAdsListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWantAdsListCompleted(this, new GetWantAdsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListQuestionQAByCategory", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuestionResult[] GetListQuestionQAByCategory(int[] lstCategoryID, int startIndex, int pageSize, ref int totalRecord)
        {
            object[] results = this.Invoke("GetListQuestionQAByCategory", new object[] {
                    lstCategoryID,
                    startIndex,
                    pageSize,
                    totalRecord});
            totalRecord = ((int)(results[1]));
            return ((QuestionResult[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetListQuestionQAByCategory(int[] lstCategoryID, int startIndex, int pageSize, int totalRecord, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetListQuestionQAByCategory", new object[] {
                    lstCategoryID,
                    startIndex,
                    pageSize,
                    totalRecord}, callback, asyncState);
        }

        /// <remarks/>
        public QuestionResult[] EndGetListQuestionQAByCategory(System.IAsyncResult asyncResult, out int totalRecord)
        {
            object[] results = this.EndInvoke(asyncResult);
            totalRecord = ((int)(results[1]));
            return ((QuestionResult[])(results[0]));
        }

        /// <remarks/>
        public void GetListQuestionQAByCategoryAsync(int[] lstCategoryID, int startIndex, int pageSize, int totalRecord)
        {
            this.GetListQuestionQAByCategoryAsync(lstCategoryID, startIndex, pageSize, totalRecord, null);
        }

        /// <remarks/>
        public void GetListQuestionQAByCategoryAsync(int[] lstCategoryID, int startIndex, int pageSize, int totalRecord, object userState)
        {
            if ((this.GetListQuestionQAByCategoryOperationCompleted == null))
            {
                this.GetListQuestionQAByCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListQuestionQAByCategoryOperationCompleted);
            }
            this.InvokeAsync("GetListQuestionQAByCategory", new object[] {
                    lstCategoryID,
                    startIndex,
                    pageSize,
                    totalRecord}, this.GetListQuestionQAByCategoryOperationCompleted, userState);
        }

        private void OnGetListQuestionQAByCategoryOperationCompleted(object arg)
        {
            if ((this.GetListQuestionQAByCategoryCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListQuestionQAByCategoryCompleted(this, new GetListQuestionQAByCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListQuestionQAByUser", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuestionResult[] GetListQuestionQAByUser(long paygateID, int startIndex, int pageSize, ref int totalRecord)
        {
            object[] results = this.Invoke("GetListQuestionQAByUser", new object[] {
                    paygateID,
                    startIndex,
                    pageSize,
                    totalRecord});
            totalRecord = ((int)(results[1]));
            return ((QuestionResult[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetListQuestionQAByUser(long paygateID, int startIndex, int pageSize, int totalRecord, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetListQuestionQAByUser", new object[] {
                    paygateID,
                    startIndex,
                    pageSize,
                    totalRecord}, callback, asyncState);
        }

        /// <remarks/>
        public QuestionResult[] EndGetListQuestionQAByUser(System.IAsyncResult asyncResult, out int totalRecord)
        {
            object[] results = this.EndInvoke(asyncResult);
            totalRecord = ((int)(results[1]));
            return ((QuestionResult[])(results[0]));
        }

        /// <remarks/>
        public void GetListQuestionQAByUserAsync(long paygateID, int startIndex, int pageSize, int totalRecord)
        {
            this.GetListQuestionQAByUserAsync(paygateID, startIndex, pageSize, totalRecord, null);
        }

        /// <remarks/>
        public void GetListQuestionQAByUserAsync(long paygateID, int startIndex, int pageSize, int totalRecord, object userState)
        {
            if ((this.GetListQuestionQAByUserOperationCompleted == null))
            {
                this.GetListQuestionQAByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListQuestionQAByUserOperationCompleted);
            }
            this.InvokeAsync("GetListQuestionQAByUser", new object[] {
                    paygateID,
                    startIndex,
                    pageSize,
                    totalRecord}, this.GetListQuestionQAByUserOperationCompleted, userState);
        }

        private void OnGetListQuestionQAByUserOperationCompleted(object arg)
        {
            if ((this.GetListQuestionQAByUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListQuestionQAByUserCompleted(this, new GetListQuestionQAByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListAnswerQA", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AnswerResult[] GetListAnswerQA(int questionID, int numberQA)
        {
            object[] results = this.Invoke("GetListAnswerQA", new object[] {
                    questionID,
                    numberQA});
            return ((AnswerResult[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetListAnswerQA(int questionID, int numberQA, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetListAnswerQA", new object[] {
                    questionID,
                    numberQA}, callback, asyncState);
        }

        /// <remarks/>
        public AnswerResult[] EndGetListAnswerQA(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((AnswerResult[])(results[0]));
        }

        /// <remarks/>
        public void GetListAnswerQAAsync(int questionID, int numberQA)
        {
            this.GetListAnswerQAAsync(questionID, numberQA, null);
        }

        /// <remarks/>
        public void GetListAnswerQAAsync(int questionID, int numberQA, object userState)
        {
            if ((this.GetListAnswerQAOperationCompleted == null))
            {
                this.GetListAnswerQAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListAnswerQAOperationCompleted);
            }
            this.InvokeAsync("GetListAnswerQA", new object[] {
                    questionID,
                    numberQA}, this.GetListAnswerQAOperationCompleted, userState);
        }

        private void OnGetListAnswerQAOperationCompleted(object arg)
        {
            if ((this.GetListAnswerQACompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListAnswerQACompleted(this, new GetListAnswerQACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendAnswerQA", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendAnswerQA(int questionID, long paygateID, string content)
        {
            object[] results = this.Invoke("SendAnswerQA", new object[] {
                    questionID,
                    paygateID,
                    content});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSendAnswerQA(int questionID, long paygateID, string content, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SendAnswerQA", new object[] {
                    questionID,
                    paygateID,
                    content}, callback, asyncState);
        }

        /// <remarks/>
        public int EndSendAnswerQA(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void SendAnswerQAAsync(int questionID, long paygateID, string content)
        {
            this.SendAnswerQAAsync(questionID, paygateID, content, null);
        }

        /// <remarks/>
        public void SendAnswerQAAsync(int questionID, long paygateID, string content, object userState)
        {
            if ((this.SendAnswerQAOperationCompleted == null))
            {
                this.SendAnswerQAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendAnswerQAOperationCompleted);
            }
            this.InvokeAsync("SendAnswerQA", new object[] {
                    questionID,
                    paygateID,
                    content}, this.SendAnswerQAOperationCompleted, userState);
        }

        private void OnSendAnswerQAOperationCompleted(object arg)
        {
            if ((this.SendAnswerQACompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendAnswerQACompleted(this, new SendAnswerQACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQADetails", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuestionResult GetQADetails(int questionID)
        {
            object[] results = this.Invoke("GetQADetails", new object[] {
                    questionID});
            return ((QuestionResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetQADetails(int questionID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetQADetails", new object[] {
                    questionID}, callback, asyncState);
        }

        /// <remarks/>
        public QuestionResult EndGetQADetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((QuestionResult)(results[0]));
        }

        /// <remarks/>
        public void GetQADetailsAsync(int questionID)
        {
            this.GetQADetailsAsync(questionID, null);
        }

        /// <remarks/>
        public void GetQADetailsAsync(int questionID, object userState)
        {
            if ((this.GetQADetailsOperationCompleted == null))
            {
                this.GetQADetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQADetailsOperationCompleted);
            }
            this.InvokeAsync("GetQADetails", new object[] {
                    questionID}, this.GetQADetailsOperationCompleted, userState);
        }

        private void OnGetQADetailsOperationCompleted(object arg)
        {
            if ((this.GetQADetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQADetailsCompleted(this, new GetQADetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class FAQResult
    {

        private int itemIDField;

        private string titleField;

        private string urlField;

        private int feedbackNumberField;

        /// <remarks/>
        public int ItemID
        {
            get
            {
                return this.itemIDField;
            }
            set
            {
                this.itemIDField = value;
            }
        }

        /// <remarks/>
        public string Title
        {
            get
            {
                return this.titleField;
            }
            set
            {
                this.titleField = value;
            }
        }

        /// <remarks/>
        public string Url
        {
            get
            {
                return this.urlField;
            }
            set
            {
                this.urlField = value;
            }
        }

        /// <remarks/>
        public int FeedbackNumber
        {
            get
            {
                return this.feedbackNumberField;
            }
            set
            {
                this.feedbackNumberField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class AnswerResult
    {

        private int answerIDField;

        private string contentField;

        private System.DateTime createDateField;

        private int paygateIDField;

        private string paygateNameField;

        /// <remarks/>
        public int AnswerID
        {
            get
            {
                return this.answerIDField;
            }
            set
            {
                this.answerIDField = value;
            }
        }

        /// <remarks/>
        public string Content
        {
            get
            {
                return this.contentField;
            }
            set
            {
                this.contentField = value;
            }
        }

        /// <remarks/>
        public System.DateTime CreateDate
        {
            get
            {
                return this.createDateField;
            }
            set
            {
                this.createDateField = value;
            }
        }

        /// <remarks/>
        public int PaygateID
        {
            get
            {
                return this.paygateIDField;
            }
            set
            {
                this.paygateIDField = value;
            }
        }

        /// <remarks/>
        public string PaygateName
        {
            get
            {
                return this.paygateNameField;
            }
            set
            {
                this.paygateNameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class QuestionResult
    {

        private int questionIDField;

        private string titleField;

        private string contentField;

        private System.DateTime createDateField;

        private int numberAnswerField;

        private int paygateIDField;

        private string paygateNameField;

        private int categoryIDField;

        private string urlField;

        /// <remarks/>
        public int QuestionID
        {
            get
            {
                return this.questionIDField;
            }
            set
            {
                this.questionIDField = value;
            }
        }

        /// <remarks/>
        public string Title
        {
            get
            {
                return this.titleField;
            }
            set
            {
                this.titleField = value;
            }
        }

        /// <remarks/>
        public string Content
        {
            get
            {
                return this.contentField;
            }
            set
            {
                this.contentField = value;
            }
        }

        /// <remarks/>
        public System.DateTime CreateDate
        {
            get
            {
                return this.createDateField;
            }
            set
            {
                this.createDateField = value;
            }
        }

        /// <remarks/>
        public int NumberAnswer
        {
            get
            {
                return this.numberAnswerField;
            }
            set
            {
                this.numberAnswerField = value;
            }
        }

        /// <remarks/>
        public int PaygateID
        {
            get
            {
                return this.paygateIDField;
            }
            set
            {
                this.paygateIDField = value;
            }
        }

        /// <remarks/>
        public string PaygateName
        {
            get
            {
                return this.paygateNameField;
            }
            set
            {
                this.paygateNameField = value;
            }
        }

        /// <remarks/>
        public int CategoryID
        {
            get
            {
                return this.categoryIDField;
            }
            set
            {
                this.categoryIDField = value;
            }
        }

        /// <remarks/>
        public string Url
        {
            get
            {
                return this.urlField;
            }
            set
            {
                this.urlField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetQAListCompletedEventHandler(object sender, GetQAListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQAListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetQAListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public FAQResult[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((FAQResult[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetWantAdsListCompletedEventHandler(object sender, GetWantAdsListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWantAdsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetWantAdsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public FAQResult[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((FAQResult[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetListQuestionQAByCategoryCompletedEventHandler(object sender, GetListQuestionQAByCategoryCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListQuestionQAByCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetListQuestionQAByCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public QuestionResult[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((QuestionResult[])(this.results[0]));
            }
        }

        /// <remarks/>
        public int totalRecord
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetListQuestionQAByUserCompletedEventHandler(object sender, GetListQuestionQAByUserCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListQuestionQAByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetListQuestionQAByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public QuestionResult[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((QuestionResult[])(this.results[0]));
            }
        }

        /// <remarks/>
        public int totalRecord
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetListAnswerQACompletedEventHandler(object sender, GetListAnswerQACompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListAnswerQACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetListAnswerQACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public AnswerResult[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((AnswerResult[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SendAnswerQACompletedEventHandler(object sender, SendAnswerQACompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendAnswerQACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SendAnswerQACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void GetQADetailsCompletedEventHandler(object sender, GetQADetailsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQADetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetQADetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public QuestionResult Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((QuestionResult)(this.results[0]));
            }
        }
    }
}