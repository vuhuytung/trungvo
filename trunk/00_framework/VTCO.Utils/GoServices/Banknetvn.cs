//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 

namespace VTCO.Utils.GoServices
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "PaymentGatewaySoap11Binding", Namespace = "http://pgWebservices")]
    public partial class PaymentGateway : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback ConfirmTransactionResultOperationCompleted;

        private System.Threading.SendOrPostCallback QuerryBillStatusOperationCompleted;

        private System.Threading.SendOrPostCallback Send_GoodInfoOperationCompleted;

        /// <remarks/>
        public PaymentGateway()
        {
            //this.Url = "http://123.30.22.86:8080/pg/services/PaymentGateway.PaymentGatewayHttpSoap11Endpoint/";
            this.Url = VTCO.Config.Global.Settings.BanknetvnURL;
        }

        /// <remarks/>
        public event ConfirmTransactionResultCompletedEventHandler ConfirmTransactionResultCompleted;

        /// <remarks/>
        public event QuerryBillStatusCompletedEventHandler QuerryBillStatusCompleted;

        /// <remarks/>
        public event Send_GoodInfoCompletedEventHandler Send_GoodInfoCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:ConfirmTransactionResult", RequestNamespace = "http://pgWebservices", ResponseNamespace = "http://pgWebservices", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable = true)]
        public string ConfirmTransactionResult([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Merchant_trans_id, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Trans_id, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Merchant_code, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Trans_result, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Trans_key)
        {
            object[] results = this.Invoke("ConfirmTransactionResult", new object[] {
                    Merchant_trans_id,
                    Trans_id,
                    Merchant_code,
                    Trans_result,
                    Trans_key});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginConfirmTransactionResult(string Merchant_trans_id, string Trans_id, string Merchant_code, string Trans_result, string Trans_key, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ConfirmTransactionResult", new object[] {
                    Merchant_trans_id,
                    Trans_id,
                    Merchant_code,
                    Trans_result,
                    Trans_key}, callback, asyncState);
        }

        /// <remarks/>
        public string EndConfirmTransactionResult(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ConfirmTransactionResultAsync(string Merchant_trans_id, string Trans_id, string Merchant_code, string Trans_result, string Trans_key)
        {
            this.ConfirmTransactionResultAsync(Merchant_trans_id, Trans_id, Merchant_code, Trans_result, Trans_key, null);
        }

        /// <remarks/>
        public void ConfirmTransactionResultAsync(string Merchant_trans_id, string Trans_id, string Merchant_code, string Trans_result, string Trans_key, object userState)
        {
            if ((this.ConfirmTransactionResultOperationCompleted == null))
            {
                this.ConfirmTransactionResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmTransactionResultOperationCompleted);
            }
            this.InvokeAsync("ConfirmTransactionResult", new object[] {
                    Merchant_trans_id,
                    Trans_id,
                    Merchant_code,
                    Trans_result,
                    Trans_key}, this.ConfirmTransactionResultOperationCompleted, userState);
        }

        private void OnConfirmTransactionResultOperationCompleted(object arg)
        {
            if ((this.ConfirmTransactionResultCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmTransactionResultCompleted(this, new ConfirmTransactionResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:QuerryBillStatus", RequestNamespace = "http://pgWebservices", ResponseNamespace = "http://pgWebservices", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable = true)]
        public string QuerryBillStatus([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Merchant_trans_id, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Trans_id, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Merchant_code, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Trans_key)
        {
            object[] results = this.Invoke("QuerryBillStatus", new object[] {
                    Merchant_trans_id,
                    Trans_id,
                    Merchant_code,
                    Trans_key});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginQuerryBillStatus(string Merchant_trans_id, string Trans_id, string Merchant_code, string Trans_key, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("QuerryBillStatus", new object[] {
                    Merchant_trans_id,
                    Trans_id,
                    Merchant_code,
                    Trans_key}, callback, asyncState);
        }

        /// <remarks/>
        public string EndQuerryBillStatus(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void QuerryBillStatusAsync(string Merchant_trans_id, string Trans_id, string Merchant_code, string Trans_key)
        {
            this.QuerryBillStatusAsync(Merchant_trans_id, Trans_id, Merchant_code, Trans_key, null);
        }

        /// <remarks/>
        public void QuerryBillStatusAsync(string Merchant_trans_id, string Trans_id, string Merchant_code, string Trans_key, object userState)
        {
            if ((this.QuerryBillStatusOperationCompleted == null))
            {
                this.QuerryBillStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuerryBillStatusOperationCompleted);
            }
            this.InvokeAsync("QuerryBillStatus", new object[] {
                    Merchant_trans_id,
                    Trans_id,
                    Merchant_code,
                    Trans_key}, this.QuerryBillStatusOperationCompleted, userState);
        }

        private void OnQuerryBillStatusOperationCompleted(object arg)
        {
            if ((this.QuerryBillStatusCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QuerryBillStatusCompleted(this, new QuerryBillStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:Send_GoodInfo", RequestNamespace = "http://pgWebservices", ResponseNamespace = "http://pgWebservices", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable = true)]
        public string Send_GoodInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Merchant_trans_id, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Merchant_code, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Country_code, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Good_code, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Xml_description, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Net_cost, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Ship_fee, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Tax, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Url_success, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Url_fail, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Trans_key)
        {
            object[] results = this.Invoke("Send_GoodInfo", new object[] {
                    Merchant_trans_id,
                    Merchant_code,
                    Country_code,
                    Good_code,
                    Xml_description,
                    Net_cost,
                    Ship_fee,
                    Tax,
                    Url_success,
                    Url_fail,
                    Trans_key});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSend_GoodInfo(string Merchant_trans_id, string Merchant_code, string Country_code, string Good_code, string Xml_description, string Net_cost, string Ship_fee, string Tax, string Url_success, string Url_fail, string Trans_key, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Send_GoodInfo", new object[] {
                    Merchant_trans_id,
                    Merchant_code,
                    Country_code,
                    Good_code,
                    Xml_description,
                    Net_cost,
                    Ship_fee,
                    Tax,
                    Url_success,
                    Url_fail,
                    Trans_key}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSend_GoodInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void Send_GoodInfoAsync(string Merchant_trans_id, string Merchant_code, string Country_code, string Good_code, string Xml_description, string Net_cost, string Ship_fee, string Tax, string Url_success, string Url_fail, string Trans_key)
        {
            this.Send_GoodInfoAsync(Merchant_trans_id, Merchant_code, Country_code, Good_code, Xml_description, Net_cost, Ship_fee, Tax, Url_success, Url_fail, Trans_key, null);
        }

        /// <remarks/>
        public void Send_GoodInfoAsync(string Merchant_trans_id, string Merchant_code, string Country_code, string Good_code, string Xml_description, string Net_cost, string Ship_fee, string Tax, string Url_success, string Url_fail, string Trans_key, object userState)
        {
            if ((this.Send_GoodInfoOperationCompleted == null))
            {
                this.Send_GoodInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSend_GoodInfoOperationCompleted);
            }
            this.InvokeAsync("Send_GoodInfo", new object[] {
                    Merchant_trans_id,
                    Merchant_code,
                    Country_code,
                    Good_code,
                    Xml_description,
                    Net_cost,
                    Ship_fee,
                    Tax,
                    Url_success,
                    Url_fail,
                    Trans_key}, this.Send_GoodInfoOperationCompleted, userState);
        }

        private void OnSend_GoodInfoOperationCompleted(object arg)
        {
            if ((this.Send_GoodInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Send_GoodInfoCompleted(this, new Send_GoodInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void ConfirmTransactionResultCompletedEventHandler(object sender, ConfirmTransactionResultCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmTransactionResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ConfirmTransactionResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void QuerryBillStatusCompletedEventHandler(object sender, QuerryBillStatusCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuerryBillStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal QuerryBillStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void Send_GoodInfoCompletedEventHandler(object sender, Send_GoodInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Send_GoodInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal Send_GoodInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}